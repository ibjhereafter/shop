{"version":3,"sources":["history.js","store/actions/actionTypes.js","store/actions/productsActionCreator.js","store/actions/productReviewActionCreator.js","store/actions/productDetailsActionCreator.js","store/actions/cartActionCreator.js","store/actions/authActionCreator.js","store/actions/userActionCreator.js","store/actions/orderActionCreator.js","store/actions/orderDetailsActionCreator.js","store/actions/orderPaymentActionCreator.js","store/actions/adminActionCreator.js","components/products/SearchBar.js","components/layout/Header.js","components/layout/Footer.js","components/utilities/Loader.js","components/utilities/Error.js","components/utilities/styles.js","components/utilities/Rating.js","components/products/HighestRatedProducts.js","components/utilities/PaginationButton.js","components/products/ProductList.js","components/HomePage.js","components/products/ProductDetails.js","components/products/Cart.js","components/authentication/LogIn.js","components/utilities/RegexPattern.js","components/users/Register.js","components/users/Profile.js","components/users/UpdateProfile.js","components/products/CheckoutProcess.js","components/products/Shipping.js","components/products/Payment.js","components/products/PlaceOrder.js","components/orders/OrderDetails.js","components/layout/AdminHomePageHeader.js","components/admin/Users.js","components/admin/AdminHome.js","components/admin/DeleteUser.js","components/admin/EditUser.js","components/admin/Products.js","components/utilities/ProductCreationLoader.js","components/admin/CreateProduct.js","components/admin/DeleteProduct.js","components/utilities/ProductEditLoader.js","components/admin/EditProduct.js","components/admin/Orders.js","components/admin/OrderDeliver.js","components/products/AddReviews.js","App.js","store/reducers/productsReducer.js","store/reducers/productDetailsReducer.js","store/reducers/cartReducer.js","store/reducers/authReducer.js","store/reducers/registrationReducer.js","store/reducers/userReducer.js","store/reducers/orderReducer.js","store/reducers/orderDetailsReducer.js","store/reducers/orderPaymentReducer.js","store/reducers/adminReducer.js","store/reducers/productReviewReducer.js","store/reducers/highestRatedProductReducer.js","store/reducers/index.js","store/ReduxConfiguration.js","index.js"],"names":["createBrowserHistory","GET_ALL_PRODUCTS","GET_TOTAL_PRODUCTS","GET_ALL_PRODUCTS_FAILURE","GET_PRODUCT_DETAILS","GET_PRODUCT_DETAILS_FAILURE","GET_CART_PRODUCT","REMOVE_CART_ITEM","RESET_CART_ITEMS","GET_SHIPPING_ADDRESS","GET_PAYMENT","GET_CREATE_ORDER","GET_CREATE_ORDER_FAILURE","GET_ORDER_DETAILS","GET_USERS_MY_ORDERS","GET_USERS_MY_ORDERS_FAILURE","ORDER_PAYMENT","ORDER_PAYMENT_FAILURE","ORDER_PAYMENT_RESET","LOG_IN","LOG_IN_FAILURE","LOG_OUT","REGISTER_USER","REGISTER_USER_FAILURE","RESET_REGISTERED_USER_MESSAGE","RESET_CART_ITEMS_FOR_REGISTERED_USER","USER_PROFILE","USER_PROFILE_FAILURE","ADMIN_GET_SINGLE_USER_PROFILE","ADMIN_GET_SINGLE_USER_PROFILE_FAILURE","ADMIN_USER_TO_BE_EDITED","ADMIN_GET_ALL_PRODUCTS","ADMIN_GET_PRODUCT_TO_BE_DELETED","ADMIN_GET_ALL_PRODUCTS_FAILURE","ADMIN_EDIT_PRODUCT","ADMIN_GET_USERS","ADMIN_DELETE_USER_FAILURE","ADMIN_GET_ORDERS","ADMIN_GET_ORDERS_FAILURE","MARK_DELIVERED","GET_PRODUCT_REVIEWS","CREATE_PRODUCT_REVIEW_FAILURE","RESET_CREATE_PRODUCT_REVIEW_MESSAGE","GET_HIGHEST_RATED_PRODUCT","GET_HIGHEST_RATED_PRODUCT_FAILURE","axiosOption","mode","withCredentials","getAllProducts","action","type","actionTypes","payload","getTotalProducts","getAllProductsAllFailure","startGetAllProducts","keyword","dispatch","a","url","axios","get","data","products","totalProducts","response","error","getHighestRatedProductsFailure","createReviewFailure","getProductReviews","getProductsDetailsFailure","startGetProductDetails","productId","reviews","logIn","logInError","logOut","startLogOut","post","localStorage","removeItem","history","push","message","registerUserFailure","getUserProfile","getUserProfileFailure","getCreateOrderFailure","resetCartItems","getUserMyOrdersFailure","getOrderPaymentFailure","getAdminUsersFailure","adminDeleteUSerFailure","resetDeleteUserMessage","adminGetUserProfileToBeDeleted","adminGetUserProfileToBeEdited","adminGetUserProfileToBeDeletedFailure","startAdminDeleteUser","userId","delete","status","connect","sendKeyWord","props","useState","setKeyword","useEffect","style","borderRadius","className","placeholder","onChange","event","target","value","borderTopRightRadius","borderBottomRightRadius","onClick","state","user","authentication","onProfileClick","_id","onLogOutClick","marginBottom","to","width","name","marginRight","toUpperCase","color","isAdmin","Footer","Loader","Error","styles","marginTop","marginLeft","marginRightLeft","bold","fontWeight","centerElement","display","justifyContent","Rating","averageRating","highestRatedProduct","highestRatedProducts","loading","startGetHighestRatedProducts","list","map","product","src","image","alt","description","price","numberOfProductsPerPage","totalPages","setTotalPages","numberOfButtons","setNumberOfButtons","onPageClick","Math","ceil","totalButtons","Array","keys","pages","button","page","autoFocus","currentPage","setCurrentPage","startIndex","currentList","slice","length","pageNumber","HomePage","document","title","productDetails","match","quantity","setQuantity","params","id","stock","reviewList","review","rating","comment","createdAt","substring","Styles","height","numberOfReviews","goToCart","disabled","cartItems","cart","startGetCartProduct","cartItem","items","getItem","cartFromLocalStorage","JSON","parse","setItem","stringify","startRemoveCartItem","itemId","getState","location","totalPrice","forEach","item","Number","toFixed","cartList","sum","subTotals","login","loginMessage","startLogIn","userCredentials","email","setEmail","password","setPassword","formError","setFormError","showFormError","setShowFormError","showLoginError","setShowLoginError","onSubmit","preventDefault","pattern","firstName","lastName","age","registrationMessage","newUser","startRegister","imageUrl","resetRegistrationMessage","setName","nameError","setNameError","showNameErrorMessage","setShowNameErrorMessage","emailError","setEmailError","emailErrorMessage","setEmailErrorMessage","passwordError","setPasswordError","showPasswordErrorMessage","setShowPasswordErrorMessage","confirmPassword","setConfirmPassword","confirmPasswordError","setConfirmPasswordError","showConfirmPasswordErrorMessage","setShowConfirmPasswordErrorMessage","picture","setPicture","previewSource","setPreviewSource","showRegistrationErrorMessage","setShowRegistrationErrorMessage","file","reader","FileReader","readAsDataURL","onloadend","result","previewFile","setTimeout","FormData","append","files","userProfile","userOrders","order","errorMessage","startGetUserProfile","startGetUserMyOrders","startUploadProfileImage","data-label","substr","isPaid","paymentResult","update_time","isDelivered","loggedInUser","startUpdateProfile","update","photo","edition","patch","accept","CheckoutProcess","shipping","payment","placeOrder","disable","shippingAddress","getShippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","getPaymentMethod","paymentMethod","setPaymentMethod","htmlFor","startGetCreateOrOrder","newOrder","itemsSum","itemsPrice","shippingPrice","taxPrice","cartItemsList","orderItems","orderDetails","paymentLoading","paidOrder","paymentError","startGetOrderDetails","orderId","token","updatedAt","__v","resetOrderPayment","startGetOrderPayment","sdkReady","setSdkReady","getPayPalClientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","pathname","AdminHomePageHeader","admin","users","deleteUserMessage","startGetAdminUsers","showDeleteUserMessage","setShowDeleteUserMessage","AdminHome","singleUser","startAdminGetUserProfileToBeDeleted","closeModal","ReactDOM","createPortal","stopPropagation","textDecorationLine","querySelector","userToBeEdited","singleUserToBeEdited","startAdminGetUserProfileToBeEdited","startAdminEditUserProfile","edit","setAdmin","String","toLowerCase","startAdminGetAllProducts","category","brand","ProductCreationLoader","createProductError","startAdminCreateProduct","newProduct","console","log","setPrice","setBrand","setStock","setCategory","setDescription","productCreationLoader","setProductCreationLoader","productToBeDeleted","startAdminGetProductToBeDeleted","startAdminDeleteProduct","ProductEditLoader","productToBeEdited","startAdminGetProductToBeEdited","startAdminEditProduct","productEditLoader","setProductEditLoader","allOrders","orders","startAdminGetAllOrders","delivered","startAdminMarkOrderAsDelivered","startCreateProductReview","newReview","setRating","setComment","newRating","cols","rows","App","path","component","exact","ProductDetails","Cart","Shipping","Payment","PlaceOrder","OrderDetails","DeleteUser","DeleteProduct","EditUser","EditProduct","Register","LogIn","Profile","UpdateProfile","CreateProduct","Products","Orders","OrderDeliver","AddReview","INITIAL_DATA","productsReducer","getCartItems","cartReducer","filteredState","filter","filteredCart","authReducer","registrationReducer","userReducer","success","createdOrder","orderReducer","orderDetailsReducer","orderPaymentReducer","adminReducer","productReviews","highestRatedProductsReducer","rootReducer","combineReducers","productDetailsReducer","highestRatedProductReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","newUserInfo","getNewUser","getNewUserFromLocalStorage","loggedInUserInfo","existingUser","getLoggedInUserFromLocalStorage","initialState","getCartFromLocalStorage","shippingInfo","getShippingAddressFromLocalStorage","getPaymentMethodFromLocalStorage","store","createStore","applyMiddleware","thunk","ReduxConfiguration","children","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1aae139d.chunk.js","sourcesContent":["import { createBrowserHistory }  from 'history';\r\n\r\nexport default createBrowserHistory();","export const GET_ALL_PRODUCTS = 'GET_ALL_PRODUCTS';\r\nexport const GET_TOTAL_PRODUCTS = 'GET_TOTAL_PRODUCTS';\r\nexport const GET_ALL_PRODUCTS_FAILURE = 'GET_ALL_PRODUCTS_FAILURE';\r\n\r\n//########################################################################\r\n\r\nexport const GET_PRODUCT_DETAILS = 'GET_PRODUCT_DETAILS';\r\nexport const GET_PRODUCT_DETAILS_FAILURE = 'GET_PRODUCT_FAILURE';\r\n\r\n//########################################################################\r\n\r\nexport const GET_CART_PRODUCT = 'GET_CART_PRODUCT';\r\nexport const GET_CART_FAILURE = 'GET_CART_FAILURE';\r\nexport const REMOVE_CART_ITEM = 'REMOVE_CART_ITEM';\r\nexport const RESET_CART_ITEMS = 'RESET_CART_ITEMS';\r\nexport const GET_SHIPPING_ADDRESS = 'GET_SHIPPING_ADDRESS';\r\nexport const GET_PAYMENT = 'GET_PAYMENT';\r\n\r\n//########################################################################\r\nexport const GET_CREATE_ORDER = 'GET_CREATE_ORDER';\r\nexport const GET_CREATE_ORDER_FAILURE = 'GET_CREATE_ORDER_FAILURE';\r\nexport const GET_ORDER_DETAILS = 'GET_ORDER_DETAILS';\r\nexport const GET_USERS_MY_ORDERS = 'GET_USERS_MY_ORDERS';\r\nexport const GET_USERS_MY_ORDERS_FAILURE = 'GET_USERS_MY_ORDERS_FAILURE';\r\nexport const GET_ORDER_DETAILS_FAILURE = 'GET_ORDER_DETAILS_FAILURE';\r\n//########################################################################\r\nexport const ORDER_PAYMENT = 'ORDER_PAYMENT';\r\nexport const ORDER_PAYMENT_FAILURE = 'ORDER_PAYMENT_FAILURE';\r\nexport const ORDER_PAYMENT_RESET = 'ORDER_PAYMENT_RESET';\r\n//########################################################################\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\r\n\r\n//########################################################################\r\n\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_FAILURE = 'REGISTER_USER_FAILURE';\r\nexport const RESET_REGISTERED_USER_MESSAGE = 'RESET_REGISTERED_USER_MESSAGE';\r\nexport const RESET_CART_ITEMS_FOR_REGISTERED_USER = 'RESET_CART_ITEMS_FOR_REGISTERED_USER';\r\n\r\n//#########################################################################################################\r\n\r\nexport const USER_PROFILE = 'USER_PROFILE';\r\nexport const USER_PROFILE_FAILURE = 'USER_PROFILE_FAILURE';\r\nexport const UPDATE_PROFILE_FAILURE = 'UPDATE_PROFILE_FAILURE';\r\n//#########################################################################################################\r\n\r\nexport const ADMIN_GET_SINGLE_USER_PROFILE ='ADMIN_GET_SINGLE_USER_PROFILE';\r\nexport const ADMIN_GET_SINGLE_USER_PROFILE_FAILURE = 'ADMIN_GET_SINGLE_USER_PROFILE_FAILURE';\r\nexport const ADMIN_USER_TO_BE_EDITED = 'ADMIN_USER_TO_BE_EDITED';\r\nexport const ADMIN_USER_TO_BE_EDITED_FAILURE = 'ADMIN_USER_TO_BE_EDITED_FAILURE';\r\nexport const ADMIN_USER_EDIT_FAILURE = 'ADMIN_USER_EDIT_FAILURE';\r\n//#########################################################################################################\r\nexport const ADMIN_GET_ALL_PRODUCTS = 'ADMIN_GET_ALL_PRODUCTS';\r\nexport const ADMIN_GET_PRODUCT_TO_BE_DELETED = 'ADMIN_GET_PRODUCT_TO_BE_DELETED';\r\nexport const ADMIN_GET_PRODUCT_TO_BE_DELETED_FAILURE = 'ADMIN_GET_PRODUCT_TO_BE_DELETED_FAILURE';\r\nexport const ADMIN_GET_ALL_PRODUCTS_FAILURE = 'ADMIN_GET_ALL_PRODUCTS_FAILURE';\r\nexport const ADMIN_EDIT_PRODUCT = 'ADMIN_EDIT_PRODUCT';\r\nexport const ADMIN_EDIT_PRODUCT_FAILURE = 'ADMIN_EDIT_PRODUCT_FAILURE';\r\n\r\n//#########################################################################################################\r\nexport const ADMIN_GET_USERS = 'ADMIN_GET_USERS';\r\nexport const ADMIN_GET_USERS_FAILURE = 'ADMIN_GET_USERS_FAILURE';\r\nexport const ADMIN_DELETE_USER = 'ADMIN_DELETE_USER';\r\nexport const ADMIN_DELETE_USER_FAILURE = 'ADMIN_DELETE_USER_FAILURE';\r\nexport const ADMIN_DELETE_USER_RESET_MESSAGE = 'ADMIN_DELETE_USER_RESET_MESSAGE';\r\n//#########################################################################################################\r\n\r\nexport const ADMIN_GET_ORDERS = 'ADMIN_GET_ORDERS';\r\nexport const ADMIN_GET_ORDERS_FAILURE = 'ADMIN_GET_ORDERS';\r\n//#########################################################################################################\r\nexport const MARK_DELIVERED = 'MARK_DELIVERED';\r\n//#########################################################################################################\r\nexport const GET_PRODUCT_REVIEWS = 'GET_PRODUCT_REVIEWS';\r\nexport const GET_PRODUCT_REVIEWS_FAILURE = 'GET_PRODUCT_REVIEWS_FAILURE';\r\nexport const CREATE_PRODUCT_REVIEW = 'CREATE_PRODUCT_REVIEW';\r\nexport const CREATE_PRODUCT_REVIEW_FAILURE = 'CREATE_PRODUCT_REVIEW_FAILURE';\r\nexport const RESET_CREATE_PRODUCT_REVIEW_MESSAGE = 'GET_PRODUCT_REVIEWS';\r\n\r\n//#########################################################################################################\r\n\r\nexport const GET_HIGHEST_RATED_PRODUCT = 'GET_HIGHEST_RATED_PRODUCT';\r\nexport const GET_HIGHEST_RATED_PRODUCT_FAILURE = 'GET_HIGHEST_RATED_PRODUCT_FAILURE';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\nconst getAllProducts = (action) => {\r\n    return {\r\n        type: actionTypes.GET_ALL_PRODUCTS,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst getTotalProducts = (action) => {\r\n    return {\r\n        type: actionTypes.GET_TOTAL_PRODUCTS,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst getAllProductsAllFailure = (action) => {\r\n    return {\r\n        type: actionTypes.GET_ALL_PRODUCTS_FAILURE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const startGetAllProducts = (keyword = '') => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/products/all?keyword=${keyword}`;\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(getAllProducts(data.products));\r\n            dispatch(getTotalProducts(data.totalProducts));\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                dispatch(getAllProductsAllFailure(error.response.data.error));\r\n\r\n            } else {\r\n                dispatch(getAllProductsAllFailure('Error has been encountered. Please, try again'));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst getHighestRatedProductsFailure = (action) => {\r\n    return {\r\n        type: actionTypes.GET_HIGHEST_RATED_PRODUCT_FAILURE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst getHighestRatedProducts = (action) => {\r\n    return {\r\n        type: actionTypes.GET_HIGHEST_RATED_PRODUCT,\r\n        payload: action\r\n    }\r\n}\r\n\r\nexport const startGetHighestRatedProducts = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = '/products/rated';\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(getHighestRatedProducts(data));\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                dispatch(getHighestRatedProductsFailure(error.response.data.error))\r\n\r\n            } else {\r\n                dispatch(getAllProductsAllFailure(error));\r\n            }\r\n        }\r\n    }\r\n};","import axios from \"axios\";\r\nimport * as actionTypes from './actionTypes';\r\nimport history from \"../../history\";\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\nconst createReviewFailure = (action) => {\r\n    return {\r\n        type: actionTypes.CREATE_PRODUCT_REVIEW_FAILURE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const getProductReviews = (action) => {\r\n    return {\r\n        type: actionTypes.GET_PRODUCT_REVIEWS,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const startCreateProductReview = (productId, newReview) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/products/${productId}/review`;\r\n            await axios.post(url, newReview, axiosOption);\r\n            history.push(`/products/${productId}/details`);\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                dispatch(createReviewFailure(error.response.data.error))\r\n            } else {\r\n                dispatch(createReviewFailure(error));\r\n            }\r\n        }\r\n    }\r\n};","import axios from \"axios\";\r\nimport * as actionTypes from './actionTypes';\r\nimport { getProductReviews } from './productReviewActionCreator';\r\n\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\nexport const getProductDetails = (action) => {\r\n    return {\r\n        type: actionTypes.GET_PRODUCT_DETAILS,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst getProductsDetailsFailure = (action) => {\r\n    return {\r\n        type: actionTypes.GET_PRODUCT_DETAILS_FAILURE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const startGetProductDetails = (productId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/products/${productId}`;\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(getProductDetails(data));\r\n            dispatch(getProductReviews(data.reviews));\r\n        } catch (error) {\r\n            if (error.response) {\r\n                dispatch(getProductsDetailsFailure(error.response.data.error));\r\n            }\r\n        }\r\n    }\r\n};","import axios from \"axios\";\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport history from \"../../history\";\r\n\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\nconst getCartProduct = (action) => {\r\n    return {\r\n        type: actionTypes.GET_CART_PRODUCT,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst removeCartItem = (action) => {\r\n    return {\r\n        type: actionTypes.REMOVE_CART_ITEM,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const startRemoveCartItem = (itemId) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(removeCartItem(itemId));\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n        history.push('/cart');\r\n    }\r\n};\r\n\r\nexport const startGetCartProduct = (_id, quantity) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/products/${_id}`;\r\n            const { data } = await axios.get(url, axiosOption);\r\n\r\n            const cartItem = {\r\n                _id: data._id,\r\n                product: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                stock: data.stock,\r\n                quantity\r\n            };\r\n\r\n            let cart = [];\r\n            const items = localStorage.getItem('cartItems');\r\n            if (items) {\r\n                const cartFromLocalStorage = JSON.parse(items);\r\n                cart = [...cartFromLocalStorage];\r\n            }\r\n\r\n            cart.push(cartItem);\r\n\r\n            localStorage.setItem('cartItems', JSON.stringify(cart));\r\n            dispatch(getCartProduct(cartItem));\r\n            history.push('/cart');\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport const getShippingAddress = (action) => {\r\n    return {\r\n        type: actionTypes.GET_SHIPPING_ADDRESS,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const getPaymentMethod = (action) => {\r\n    return {\r\n        type: actionTypes.GET_PAYMENT,\r\n        payload: action\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport * as actionTypes from './actionTypes';\r\nimport history from \"../../history\";\r\n\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\nexport const logIn = (action) => {\r\n    return {\r\n        type: actionTypes.LOG_IN,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst logInError = (action) => {\r\n    return {\r\n        type: actionTypes.LOG_IN_FAILURE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const startLogIn = (userCredentials) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const url = `/users/login`;\r\n            const { data } = await axios.post(url, userCredentials, axiosOption);\r\n            dispatch(logIn(data));\r\n            localStorage.setItem('user', JSON.stringify(getState().authentication.user));\r\n            history.push('/');\r\n        } catch (error) {\r\n            if (error) {\r\n                dispatch(logInError(error.response.data.error));\r\n            } else {\r\n                dispatch(logInError(error.message));\r\n                history.push('/users/login');\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const logOut = () => {\r\n    return {\r\n        type: actionTypes.LOG_OUT,\r\n    }\r\n};\r\n\r\nexport const startLogOut = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = '/users/logout';\r\n            await axios.post(url,{}, axiosOption);\r\n            localStorage.removeItem('user');\r\n            dispatch(logOut());\r\n            history.push('/');\r\n        } catch (error) {\r\n            if (error.response === 401) {\r\n                dispatch(logInError(error.response.data.error));\r\n                history.push('/users/login')\r\n            } else {\r\n                dispatch(logInError(error.message));\r\n                history.push('/');\r\n            }\r\n\r\n        }\r\n    }\r\n};","import axios from \"axios\";\r\nimport * as actionTypes from './actionTypes';\r\nimport history from \"../../history\";\r\nimport { logIn } from \"./authActionCreator\";\r\n\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\nconst registerUser = (action) => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst registerUserFailure = (action) => {\r\n    return {\r\n        type: actionTypes.REGISTER_USER_FAILURE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const resetRegistrationMessage = (action) => {\r\n    return {\r\n        type: actionTypes.RESET_REGISTERED_USER_MESSAGE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst getUserProfile = (action) => {\r\n    return {\r\n        type: actionTypes.USER_PROFILE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst getUserProfileFailure = (action) => {\r\n    return {\r\n        type: actionTypes.USER_PROFILE_FAILURE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const startUpdateProfile = (update, photo) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const uploadUrl = '/upload';\r\n            const { data: image } = await axios.post(uploadUrl, { image: photo }, axiosOption);\r\n\r\n            const edition = {\r\n                ...update,\r\n                image\r\n            }\r\n\r\n            const url = '/users/update/profile';\r\n            const { data } = await axios.patch(url, edition, axiosOption);\r\n            dispatch(getUserProfile(data));\r\n            localStorage.setItem('user', JSON.stringify(getState().authentication.user));\r\n            history.push('/users/profile');\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                if (error.response.status === 401) {\r\n                    dispatch(logOut())\r\n                    localStorage.removeItem('user');\r\n                    history.push('/users/login');\r\n\r\n                } else {\r\n                    dispatch(getUserProfileFailure(error.response.data.error));\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const startUploadProfileImage = (image, id) => {\r\n    return async () => {\r\n        try {\r\n            const url = '/users/update/profileimage';\r\n            await axios.post(url, image, axiosOption);\r\n            history.push(`/users/${id}`);\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const startGetUserProfile = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = '/users/me';\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(getUserProfile(data));\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                if (error.response) {\r\n                    if (error.response.status === 401 || error.response.status === 400) {\r\n                        dispatch(logOut());\r\n                        localStorage.removeItem('user');\r\n                        history.push('/users/login');\r\n\r\n                    } else {\r\n                        dispatch(getUserProfileFailure(error.response.data.error));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst logOut = () => {\r\n    return {\r\n        type: actionTypes.LOG_OUT,\r\n    }\r\n};\r\n\r\nconst resetCartItems = () => {\r\n    return {\r\n        type: actionTypes.RESET_CART_ITEMS_FOR_REGISTERED_USER\r\n    }\r\n};\r\n\r\nexport const startRegister = (newUser, image) => {\r\n    return async (dispatch,getState) => {\r\n        try {\r\n            const url = '/users/register';\r\n            const imageUrl = '/users/update/profileimage';\r\n            const { data } = await axios.post(url, newUser, axiosOption);\r\n            await axios.post(imageUrl, image, axiosOption);\r\n            dispatch(registerUser(data));\r\n            dispatch(logIn(data));\r\n            localStorage.setItem('user', JSON.stringify(getState().authentication.user));\r\n            localStorage.setItem('newUser', JSON.stringify(getState().newUser.newUser));\r\n            localStorage.removeItem('cartItems');\r\n            dispatch(resetCartItems());\r\n\r\n            history.push('/');\r\n        } catch (error) {\r\n            if (error) {\r\n                dispatch(registerUserFailure(error.response.data.error));\r\n            } else {\r\n                dispatch(registerUserFailure(error.message));\r\n                history.push('/users/login');\r\n            }\r\n        }\r\n    }\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from \"axios\";\r\nimport history from \"../../history\";\r\nimport { startLogOut } from \"./authActionCreator\";\r\n\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\nconst getCreatedOrder = (action) => {\r\n    return {\r\n        type: actionTypes.GET_CREATE_ORDER,\r\n        payload: action\r\n    };\r\n};\r\n\r\nconst getCreateOrderFailure = (action) => {\r\n    return {\r\n        type: actionTypes.GET_CREATE_ORDER_FAILURE,\r\n        payload: action\r\n    };\r\n};\r\n\r\nconst resetCartItems = (action) => {\r\n    return {\r\n        type: actionTypes.RESET_CART_ITEMS,\r\n        payload: action\r\n    };\r\n};\r\n\r\nexport const startGetCreateOrOrder = (newOrder) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = '/orders/create';\r\n            const { data } = await axios.post(url, newOrder, axiosOption);\r\n            dispatch(getCreatedOrder(data));\r\n            localStorage.removeItem('cartItems');\r\n            dispatch(resetCartItems([]));\r\n            history.push(`/orders/${data._id}/details`);\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                if (error.response.status === 401 || error.response.status === 400) {\r\n                    localStorage.removeItem('user');\r\n                    dispatch(getCreateOrderFailure(error.response.data.error));\r\n                    dispatch(startLogOut());\r\n                    history.push('/users/login');\r\n                } else {\r\n                    dispatch(getCreateOrderFailure(error.response.data.error));\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst getUserMyOrdersFailure = (action) => {\r\n    return {\r\n        type: actionTypes.GET_USERS_MY_ORDERS_FAILURE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst getUserMyOrders = (action) => {\r\n    return {\r\n        type: actionTypes.GET_USERS_MY_ORDERS,\r\n        payload: action\r\n    }\r\n}\r\n\r\nexport const startGetUserMyOrders = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = '/orders/myorders';\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(getUserMyOrders(data));\r\n\r\n        } catch (error) {\r\n            if (error.response.status === 401 || error.response.status === 400) {\r\n                dispatch(getUserMyOrdersFailure(error.response.data.error));\r\n                history.push('/users/login');\r\n            } else {\r\n                dispatch(getUserMyOrdersFailure(error.response));\r\n            }\r\n        }\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport axios from \"axios\";\r\nimport history from \"../../history\";\r\n\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\nconst getOrderDetails = (action) => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_DETAILS,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst logOut = () => {\r\n    return {\r\n        type: actionTypes.LOG_OUT,\r\n    }\r\n};\r\n\r\n\r\nexport const startGetOrderDetails = (orderId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/orders/${orderId}`;\r\n            const { data } = await axios.get(url, axiosOption);\r\n            delete data.user.password;\r\n            delete data.user.token;\r\n            delete data.user.createdAt;\r\n            delete data.user.updatedAt;\r\n            delete data.user.__v;\r\n\r\n            dispatch(getOrderDetails(data));\r\n        } catch (error) {\r\n            if (error.response === 401) {\r\n                dispatch(logOut());\r\n                history.push('/users/login');\r\n            }\r\n\r\n        }\r\n    }\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from \"axios\";\r\nimport history from \"../../history\";\r\n\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\nconst getOrderPaymentFailure = (action) => {\r\n    return {\r\n        type: actionTypes.ORDER_PAYMENT_FAILURE,\r\n        payload: action.payload\r\n    }\r\n};\r\n\r\nexport const resetOrderPayment = () => {\r\n    return {\r\n        type: actionTypes.ORDER_PAYMENT_RESET\r\n    }\r\n};\r\n\r\nconst getOrderDetails = (action) => {\r\n    return {\r\n        type: actionTypes.GET_ORDER_DETAILS,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const startGetOrderPayment = (orderId, paymentResult) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/orders/${orderId}/pay`;\r\n            const { data } = await axios.patch(url, paymentResult, axiosOption);\r\n            delete data.user.password;\r\n            delete data.user.token;\r\n            delete data.user.createdAt;\r\n            delete data.user.updatedAt;\r\n            delete data.user.__v;\r\n            dispatch(getOrderDetails(data));\r\n\r\n        } catch (error) {\r\n            if (error.response.status === 401 || 400) {\r\n                dispatch(getOrderPaymentFailure(error.response.data.error));\r\n                history.push('/users/login');\r\n            }\r\n\r\n            if (error.response) {\r\n                dispatch(getOrderPaymentFailure(error.response.data.error));\r\n                dispatch(getOrderPaymentFailure(error.response))\r\n            }\r\n        }\r\n    }\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from \"axios\";\r\nimport history from \"../../history\";\r\n\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\nexport const startGetProductToBeEdited = (productId) => {\r\n    return async () => {\r\n        try {\r\n            const url = `/admin/products/${productId}`;\r\n            await axios.get(url, axiosOption);\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport const startAdminCreateProduct = (product, photo) => {\r\n    return async () => {\r\n        try {\r\n            const uploadUrl = '/upload';\r\n            const { data: image } = await axios.post(uploadUrl, {image: photo}, axiosOption)\r\n\r\n            const url = '/admin/products/create';\r\n            const newProduct = {\r\n                ...product,\r\n                image\r\n            }\r\n            await axios.post(url, newProduct);\r\n            history.push('/list/products');\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.log(error.response);\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst adminGetProductToBeDeleted = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_GET_PRODUCT_TO_BE_DELETED,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const startAdminDeleteProduct = (productId) => {\r\n    return async () => {\r\n        try {\r\n            const url = `/admin/products/${productId}/delete`;\r\n            await axios.delete(url, axiosOption);\r\n            history.push('/list/products');\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport const startAdminGetProductToBeDeleted = (productId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/admin/products/${productId}`;\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(adminGetProductToBeDeleted(data));\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst adminGetAllProducts = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_GET_ALL_PRODUCTS,\r\n        payload: action\r\n    }\r\n}\r\n\r\nexport const startAdminGetAllProducts = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = '/admin/products';\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(adminGetAllProducts(data));\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n}\r\nconst getAdminUsersFailure = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_GET_USERS_FAILURE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst getAdminUsers = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_GET_USERS,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst adminEditUserProfileFailure = () => {\r\n    return {\r\n        type: actionTypes.ADMIN_USER_EDIT_FAILURE\r\n    }\r\n}\r\n\r\nexport const startAdminEditUserProfile = (userId, edit) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/admin/users/${userId}/edit`;\r\n            await axios.patch(url, edit, axiosOption);\r\n            history.push('/admin');\r\n        } catch (error) {\r\n            if (error.response.status === 401 || error.response.status === 400) {\r\n                dispatch(adminEditUserProfileFailure());\r\n                history.push('/users/login');\r\n            } else {\r\n                dispatch(adminEditUserProfileFailure());\r\n                history.push('/admin');\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startAdminGetUserProfileToBeEdited = (userId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/admin/users/${userId}`;\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(adminGetUserProfileToBeEdited(data));\r\n\r\n        } catch (error) {\r\n            if (error.response.status === 401 || error.response.status === 400) {\r\n                dispatch(adminGetUserProfileToBeDeletedFailure());\r\n                history.push('/users/login');\r\n            } else {\r\n                dispatch(adminGetUserProfileToBeDeletedFailure());\r\n                history.push('/admin');\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport const startGetAdminUsers = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = '/admin/users';\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(getAdminUsers(data));\r\n\r\n        } catch (error) {\r\n            if (error.response.status === 401 || error.response.status === 400) {\r\n                dispatch(getAdminUsersFailure(error.response.data.error));\r\n                history.push('/users/login');\r\n            } else {\r\n                dispatch(getAdminUsersFailure(error.response.data.error));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nconst adminDeleteUSerFailure = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_DELETE_USER_FAILURE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const resetDeleteUserMessage = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_DELETE_USER_RESET_MESSAGE,\r\n        payload: action\r\n    }\r\n}\r\n\r\nconst adminDeleteUSer = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_DELETE_USER,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst adminGetUserProfileToBeDeleted = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_GET_SINGLE_USER_PROFILE,\r\n        payload: action\r\n    }\r\n};\r\n\r\nconst adminGetUserProfileToBeEdited = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_USER_TO_BE_EDITED,\r\n        payload: action\r\n    }\r\n};\r\n\r\n\r\nconst adminGetUserProfileToBeDeletedFailure = () => {\r\n    return {\r\n        type: actionTypes.ADMIN_GET_SINGLE_USER_PROFILE_FAILURE,\r\n    }\r\n}\r\n\r\nexport const startAdminGetUserProfileToBeDeleted = (userId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/admin/users/${userId}`;\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(adminGetUserProfileToBeDeleted(data));\r\n\r\n        } catch (error) {\r\n            if (error.response.status === 401 || error.response.status === 400) {\r\n                dispatch(adminGetUserProfileToBeDeletedFailure());\r\n                history.push('/users/login');\r\n            } else {\r\n                dispatch(adminGetUserProfileToBeDeletedFailure());\r\n                history.push('/admin');\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport const startAdminDeleteUser = (userId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/admin/users/${userId}`;\r\n            await axios.delete(url, axiosOption);\r\n            dispatch(adminDeleteUSer('User has been successfully deleted!'));\r\n            dispatch(adminGetUserProfileToBeDeleted({}));\r\n            history.push('/admin/users');\r\n            history.push('/admin');\r\n        } catch (error) {\r\n            if (error.response.status === 401 || error.response.status === 400) {\r\n                dispatch(adminDeleteUSerFailure(error.response.data.error));\r\n                history.push('/users/login');\r\n            } else {\r\n                dispatch(adminDeleteUSerFailure(error.response.data.error));\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nconst adminGetProductToBeEdited = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_EDIT_PRODUCT,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const startAdminGetProductToBeEdited = (productId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/admin/products/${productId}`;\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(adminGetProductToBeEdited(data));\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport const startAdminEditProduct = (productId, photo, edit) => {\r\n    return async () => {\r\n        try {\r\n            const uploadUrl = '/upload';\r\n            const { data: image } = await axios.post(uploadUrl, {image: photo}, axiosOption);\r\n\r\n            const edition = {\r\n                ...edit,\r\n                image\r\n            }\r\n\r\n            const url = `/admin/products/${productId}/edit`;\r\n            await axios.patch(url, edition, axiosOption);\r\n            history.push('/list/products');\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n};\r\n\r\n//#################################################################################\r\n// ORDERS\r\n\r\nconst adminGetAllOrders = (action) => {\r\n    return {\r\n        type: actionTypes.ADMIN_GET_ORDERS,\r\n        payload: action\r\n    }\r\n};\r\n\r\nexport const startAdminGetAllOrders = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = '/admin/orders';\r\n            const { data } = await axios.get(url, axiosOption);\r\n            dispatch(adminGetAllOrders(data));\r\n            history.push('/allorders');\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n};\r\n\r\nconst adminMarkOrderAsDelivered = (action) => {\r\n    return {\r\n        type: actionTypes.MARK_DELIVERED,\r\n        payload: action\r\n    }\r\n}\r\n\r\nexport const startAdminMarkOrderAsDelivered = (orderId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const url = `/admin/orders/${orderId}/deliver`;\r\n            const { data } = await axios.patch(url, {}, axiosOption);\r\n            dispatch(adminMarkOrderAsDelivered(data));\r\n            history.push('/list/orders');\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n}","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { startGetAllProducts } from '../../store/actions/index';\r\nimport history from \"../../history\";\r\n\r\nconst SearchBar = (props) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const { startGetAllProducts } = props;\r\n\r\n    useEffect(() => {\r\n        startGetAllProducts(keyword);\r\n    }, [keyword, startGetAllProducts])\r\n\r\n    useEffect(() => {\r\n        if (keyword) {\r\n            startGetAllProducts(keyword);\r\n        } else {\r\n            startGetAllProducts();\r\n        }\r\n    }, [keyword, startGetAllProducts]);\r\n\r\n    const onButtonClick = () => {\r\n       startGetAllProducts(keyword);\r\n       history.push('/');\r\n       startGetAllProducts(keyword);\r\n    }\r\n\r\n    const onKeyWordChange = (event) => {\r\n        setKeyword(event.target.value);\r\n    }\r\n    return (\r\n        <Fragment>\r\n                <div style={{borderRadius: '10px'}} className=\"ui action input\">\r\n                    <input type=\"text\"\r\n                           placeholder=\"Enter product name ...\"\r\n                           onChange={onKeyWordChange}\r\n                           value={keyword}\r\n                           style={{borderRadius: '20px'}}\r\n                    />\r\n                    <button style={{borderTopRightRadius: '20px', borderBottomRightRadius: '20px'}} onClick={onButtonClick} className=\"ui button\">Go</button>\r\n                </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst sendKeyWord = (action) => {\r\n    return {\r\n        type: 'SEND_KEY_WORD',\r\n        payload: action\r\n    }\r\n}\r\n\r\nexport default connect(null, { startGetAllProducts, sendKeyWord })(SearchBar);","import React, { Fragment } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport history from \"../../history\";\r\nimport SearchBar from \"../products/SearchBar\";\r\n\r\nimport { startLogOut } from '../../store/actions/index';\r\n\r\nconst Header = (props) => {\r\n    const { user, startLogOut } = props;\r\n\r\n    const onProfileClick = () => {\r\n        history.push(`/users/${user._id}`);\r\n    };\r\n\r\n    const onLogOutClick = () => {\r\n        startLogOut();\r\n    }\r\n\r\n    const adminDashboard = () => {\r\n        if (user.isAdmin) {\r\n            return (\r\n                <Link to=\"/admin\">\r\n                    <div style={{color: 'black'}}>Dashboard</div>\r\n                </Link>\r\n            )\r\n\r\n        } else {\r\n            return (\r\n                <div>{}</div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const userOrLogin = () => {\r\n        if (user.name) {\r\n            return (\r\n                <Fragment>\r\n                    <div className=\"ui simple dropdown stackable\">\r\n                        <div className=\"ui stackable\" style={{marginRight: '20px', width: '200px'}}>\r\n                            {user.name.toUpperCase()}\r\n                            <i className='dropdown icon'>{}</i>\r\n                        </div>\r\n\r\n                        <div className=\"menu stackable\">\r\n                            <div style={{width: '210px', color: 'black'}} className=\"item\" onClick={onProfileClick}>Profile</div>\r\n                            <div className=\"item black\" onClick={onLogOutClick}>Log Out</div>\r\n                            <div className=\"item\">{adminDashboard()}</div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <Link to=\"/users/login\">\r\n                            <i className=\"user icon\">{}</i>\r\n                            LOGIN\r\n                    </Link>\r\n                </Fragment>\r\n            )\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav style={{marginBottom: '0px'}}>\r\n                <div className=\"ui stackable grid\">\r\n                    <div className=\"ui sixteen column stackable\">\r\n                        <div className=\"ui inverted segment stackable\">\r\n                            <div className=\"ui stackable inverted huge secondary pointing menu container\">\r\n                                <div className=\"left menu\">\r\n                                    <Link to=\"/\">\r\n                                        <div className=\"active item\">\r\n                                            ProShop\r\n                                        </div>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                                <div className=\"ui five item menu stackable\">\r\n                                    <div className=\"item\">{}</div>\r\n                                    <div style={{width: '450px'}} className=\"item\">\r\n                                        <SearchBar />\r\n                                    </div>\r\n\r\n                                    <div className=\"item\">\r\n                                        <Link to=\"/cart\">\r\n                                            <i className=\"shopping cart icon\">{}</i>\r\n                                                SHOPPING CART\r\n                                        </Link>\r\n                                    </div>\r\n\r\n                                        {userOrLogin()}\r\n                                    <div className=\"item\">{}</div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n            </nav>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.authentication.user\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { startLogOut })(Header);","import './Footer.css'\r\nimport React, { Fragment } from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"ui grid\">\r\n                <div className=\"ui sixteen column\">\r\n                    <footer>\r\n                        <div className=\"ui container\">\r\n                            <div className=\"centerElement\">Copyright &copy; All Rights Reserved - ProShop</div>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;","import './Loader.css'\r\nimport React, { Fragment } from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui grid\">\r\n                <div className=\"ui sixteen column\">\r\n\r\n                    <div className=\"ui segment\">\r\n                        <div className=\"increaseSize\">\r\n                            <div className=\"ui active dimmer increaseSize\">\r\n                                <div className=\"ui massive text loader\">Loading</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <h1 className=\"ui red visible message header container\">Sorry, an error has occurred. Please, try again!</h1>\r\n    );\r\n};\r\n\r\nexport default Error;","const styles = {\r\n    marginTop: {\r\n        marginTop: '10px'\r\n    },\r\n\r\n    marginBottom: {\r\n        marginBottom: '10px'\r\n    },\r\n\r\n    marginLeft: {\r\n        marginLeft: '5px'\r\n    },\r\n\r\n    marginRightLeft: {\r\n        marginLeft: '5px',\r\n        marginRight: '5px'\r\n    },\r\n\r\n    marginRight: {\r\n        marginRight: '5px'\r\n    },\r\n\r\n    bold: {\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    centerElement: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n\r\n}\r\n\r\nexport default styles;","import React, { Fragment } from \"react\";\r\n\r\n\r\nconst Rating = ({ averageRating }) => {\r\n    const rating = () => {\r\n\r\n        if (averageRating === 0.5 || (averageRating > 0.5 && averageRating < 1)) {\r\n            return <i className=\"half star icon yellow\"/>\r\n        }\r\n\r\n        if (averageRating === 1 || (averageRating > 1 && averageRating < 1.5)) {\r\n            return (\r\n                <Fragment>\r\n                    <i className=\"star icon yellow\"/>\r\n                    <i className=\"star icon grey\"/>\r\n                    <i className=\"star icon grey\"/>\r\n                    <i className=\"star icon grey\"/>\r\n                    <i className=\"star icon grey\"/>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        if (averageRating === 1.5 || (averageRating > 1.5 && averageRating < 2)) {\r\n            return (\r\n                <Fragment>\r\n                    <i className=\"star icon yellow\"/>\r\n                    <i className=\"half star icon yellow\"/>\r\n                    <i className=\"star icon grey\"/>\r\n                    <i className=\"star icon grey\"/>\r\n                    <i className=\"star icon grey\"/>\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        if (averageRating === 2 || (averageRating > 2 && averageRating < 2.5)) {\r\n            return (\r\n                <Fragment>\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon grey\" />\r\n                    <i className=\"star icon grey\" />\r\n                    <i className=\"star icon grey\" />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        if (averageRating === 2.5 || (averageRating > 2.5 && averageRating < 3)) {\r\n            return (\r\n                <Fragment>\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"half star icon yellow\"/>\r\n                    <i className=\"star icon grey\" />\r\n                    <i className=\"star icon grey\" />\r\n\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        if (averageRating === 3 || (averageRating > 3 && averageRating < 3.5)) {\r\n            return (\r\n                <Fragment>\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon grey\" />\r\n                    <i className=\"star icon grey\" />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        if (averageRating === 3.5 || (averageRating > 3.5 && averageRating < 4)) {\r\n            return (\r\n                <Fragment>\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"half star icon yellow\" />\r\n                    <i className=\"star icon grey\" />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        if (averageRating === 4 || (averageRating > 4 && averageRating < 4.5)) {\r\n            return (\r\n                <Fragment>\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon grey\" />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        if (averageRating === 4.5 || (averageRating > 4.5 && averageRating < 5)) {\r\n            return (\r\n                <Fragment>\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"half star icon yellow\" />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        if (averageRating === 5) {\r\n            return (\r\n                <Fragment>\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\" />\r\n                    <i className=\"star icon yellow\"/>\r\n                </Fragment>\r\n            )\r\n        }\r\n    };\r\n\r\n    return (<div>{rating()}</div>)\r\n}\r\n\r\nexport default Rating;","import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport { startGetHighestRatedProducts } from '../../store/actions/index';\r\nimport styles from \"../utilities/styles\";\r\nimport Rating from \"../utilities/Rating\";\r\n\r\n\r\nconst HighestRatedProducts = (props) => {\r\n    const { highestRatedProduct, startGetHighestRatedProducts } = props;\r\n\r\n    useEffect(() => {\r\n            startGetHighestRatedProducts();\r\n    }, [startGetHighestRatedProducts]);\r\n\r\n    const list = highestRatedProduct.map((product) => {\r\n        return (\r\n            <Fragment key={product._id}>\r\n                        <div className=\"card\">\r\n                            <div style={styles.marginBottom} className=\"image\">\r\n                                <img src={`${product.image}`} alt={product.description}/>\r\n                            </div>\r\n\r\n                            <div style={styles.marginLeft}>\r\n                                <Link to={`/products/${product._id}/details`}>\r\n                                    <div className=\"ui header\" style={styles.marginBottom}>{product.name}</div>\r\n                                </Link>\r\n\r\n                                <div style={styles.marginBottom}>\r\n                                    <Rating averageRating={product.averageRating}/>\r\n                                </div>\r\n\r\n                                <div style={styles.marginBottom} className=\"ui header\">\r\n                                    $ <span style={styles.bold}> {product.price}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n            </Fragment>\r\n        )\r\n    });\r\n\r\n    return (<div className=\"ui container eight stackable cards\">{list}</div>)\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        highestRatedProduct: state.highestRatedProduct.highestRatedProducts,\r\n        loading: state.highestRatedProduct.loading,\r\n        error: state.highestRatedProduct.error\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startGetHighestRatedProducts })(HighestRatedProducts);","import './PaginationButton.css';\r\nimport '../layout/Footer.css';\r\nimport React, {Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PaginationButton = (props) => {\r\n    const [numberOfProductsPerPage] = useState(12);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [numberOfButtons, setNumberOfButtons] = useState([]);\r\n    const { totalProducts, onPageClick } = props;\r\n\r\n\r\n    useEffect(() => {\r\n        if (totalProducts > 0) {\r\n            setTotalPages(Math.ceil(totalProducts / numberOfProductsPerPage));\r\n        }\r\n        const totalButtons = [ ...Array(totalPages).keys()];\r\n        setNumberOfButtons([...totalButtons]);\r\n\r\n    }, [totalProducts, numberOfProductsPerPage, totalPages]);\r\n\r\n    const buttons = numberOfButtons.map((button) => {\r\n        return button + 1\r\n    });\r\n\r\n    const pages = buttons.map((page) => {\r\n        return (\r\n            <button\r\n                className=\"ui grey button\"\r\n                autoFocus={ page? page === 1 : null}\r\n                onClick={() => onPageClick(page)}\r\n                key={page}>{page}\r\n            </button>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div style={{marginTop: '20px'}} className=\"ui container centerElement\">{pages}</div>\r\n\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        totalProducts: state.products.totalProducts,\r\n        products: state.products.products,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PaginationButton);\r\n","import '../layout/Footer.css'\r\nimport React, {Fragment, useEffect, useState} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport Loader from \"../utilities/Loader\";\r\nimport Error from \"../utilities/Error\";\r\nimport styles from \"../utilities/styles\";\r\nimport Rating from \"../utilities/Rating\";\r\nimport { startGetAllProducts } from '../../store/actions/index';\r\nimport HighestRatedProducts from \"./HighestRatedProducts\";\r\nimport PaginationButton from \"../utilities/PaginationButton\";\r\n\r\nconst ProductList = (props) => {\r\n    const [numberOfProductsPerPage] = useState(12);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const { loading, error, products, startGetAllProducts } = props;\r\n\r\n    const startIndex = ((currentPage - 1) * numberOfProductsPerPage );\r\n    const currentList = products.slice(startIndex, startIndex + numberOfProductsPerPage);\r\n\r\n    useEffect(() => {\r\n\r\n        startGetAllProducts();\r\n\r\n    }, [startGetAllProducts]);\r\n\r\n    const onPageClick = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    const list = currentList.map((product) => {\r\n        return (\r\n            <Fragment key={product._id}>\r\n                <div className=\"card\">\r\n                    <div style={styles.marginBottom} className=\"image\">\r\n                        <img src={`${product.image}`} alt={product.description}/>\r\n                    </div>\r\n\r\n                    <div style={styles.marginLeft}>\r\n                        <NavLink to={`/products/${product._id}/details`}>\r\n                            <div className=\"ui header\" style={styles.marginBottom}>{product.name}</div>\r\n                        </NavLink>\r\n\r\n                        <div style={styles.marginBottom}>\r\n                            <Rating averageRating={product.averageRating}/>\r\n                        </div>\r\n\r\n                        <div style={styles.marginBottom} className=\"ui header\">\r\n                            $ <span style={styles.bold}> {product.price}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Fragment>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"ui grid container\">\r\n                <div className=\"ui sixteen column\">\r\n\r\n                    {\r\n                        list.length < 12 ? null : (\r\n                            <Fragment>\r\n                                <h1 className=\"header\">HIGHEST RATED PRODUCTS</h1>\r\n                                <HighestRatedProducts />\r\n                            </Fragment>)\r\n\r\n                    }\r\n\r\n                    {\r\n                        error ? <Error /> : <h1 className=\"ui header container\">Latest Products</h1>\r\n                    }\r\n\r\n                    {\r\n                        loading ? (<Loader />)\r\n                            : (<Fragment>\r\n                                <div style={{marginBottom: '20px'}} className=\"ui container four stackable cards\">{list}</div>\r\n                                {\r\n                                    products.length > 12 ? (<PaginationButton onPageClick={onPageClick} />) : null\r\n                                }\r\n\r\n                            </Fragment>)\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.products.loading,\r\n        error: state.products.error,\r\n        products: state.products.products\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startGetAllProducts })(ProductList);","import React, { Fragment } from \"react\";\r\nimport ProductList from \"./products/ProductList\";\r\n\r\nconst HomePage = () => {\r\n    document.title = 'Welcome to Shop';\r\n    return (\r\n        <Fragment>\r\n            <ProductList />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default HomePage;","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { startGetProductDetails } from '../../store/actions/index';\r\n\r\nimport Styles from '../utilities/styles';\r\nimport Error from \"../utilities/Error\";\r\nimport Loader from \"../utilities/Loader\";\r\nimport Rating from '../utilities/Rating';\r\n\r\n\r\nconst ProductDetails = (props) => {\r\n    const { loading, error, product, startGetProductDetails, history, reviews, match }  = props;\r\n    const [ quantity, setQuantity ] = useState(1);\r\n    document.title = `${product.name} | Shop`;\r\n\r\n    const addQuantity = () => {\r\n        setQuantity(quantity + 1)\r\n\r\n        if (quantity === product.stock) {\r\n            setQuantity(product.stock)\r\n\r\n        }\r\n    };\r\n\r\n    const subtractQuantity = (event) => {\r\n        setQuantity(quantity - 1);\r\n\r\n        if (quantity <= 0) {\r\n            setQuantity(0);\r\n        }\r\n    };\r\n\r\n    const goToCart = (product, quantity) => {\r\n        if (product) {\r\n            product.quantity = quantity;\r\n            history.push('/cart', product);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (match.params.id) {\r\n            startGetProductDetails(match.params.id);\r\n        }\r\n\r\n    }, [startGetProductDetails, match]);\r\n\r\n    const stock = (stock) => {\r\n        if (stock >= 1) {\r\n            return (\r\n                <div style={{color: 'green'}} className=\"inStock\">In Stock ({stock})</div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div style={{color: 'red'}} className=\"outOfStock\">Out of Stock</div>\r\n            )\r\n        }\r\n    };\r\n\r\n    const reviewList = reviews.map((review) => {\r\n        return (\r\n            <Fragment key={review._id}>\r\n                <div className=\"item\">\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">\r\n                            <div>{review.name}</div>\r\n                        </div>\r\n                        <br/>\r\n                        <Rating averageRating={review.rating}/>\r\n                        <br/>\r\n                        <div>{review.comment}</div>\r\n                        <br/>\r\n                        <div>{review.createdAt.substring(0, 10)}</div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui stackable grid container\">\r\n                <Link to=\"/\">\r\n                    <button style={Styles.marginTop} className=\"ui black button\">Go Back</button>\r\n                </Link>\r\n            </div>\r\n\r\n            {\r\n                error && <Error />\r\n            }\r\n\r\n            {\r\n                loading ? <Loader /> : (\r\n                    <div className=\"ui stackable grid container\">\r\n                        <div className=\"eight wide column row\">\r\n                            <div className=\"column\">\r\n                                <img src={`${product.image}`}\r\n                                     alt={product.description}\r\n                                     width=\"500\"\r\n                                     height=\"400\"\r\n                                />\r\n\r\n                                <div style={Styles.marginTop} className=\"ui container\">\r\n                                    <h1>REVIEWS</h1>\r\n                                    {\r\n                                        reviews.length === 0 ? <div style={Styles.marginBottom} className=\"ui yellow visible message header\">There are no reviews for this product right now.</div> : <div className=\"ui celled list\">{reviewList}</div>\r\n                                    }\r\n                                </div>\r\n                                <div style={Styles.marginTop} className=\"ui container\">\r\n                                    <Link to={`/products/${product._id}/review`}>\r\n                                        <button className=\"ui black button\">WRITE A REVIEW</button>\r\n                                    </Link>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"four wide column row stackable\">\r\n                            <div className=\"column\">\r\n                                <div style={Styles.marginBottom} className=\"ui header\">{product.name}</div>\r\n                                <hr/>\r\n\r\n                                <div style={Styles.marginBottom}>\r\n                                    <Rating averageRating={product.averageRating}/>{product.numberOfReviews} reviews\r\n                                </div>\r\n                                <hr/>\r\n\r\n                                <div style={Styles.marginBottom} className=\"ui header\">$ {product.price}</div>\r\n                                <hr/>\r\n\r\n                                <div className=\"ui header\">{product.description}</div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"four wide column row\">\r\n                            <div className=\"column\">\r\n                                <table className=\"ui basic table\">\r\n                                    <tbody className=\"ui header\">\r\n                                    <tr>\r\n                                        <td>Price</td>\r\n                                        <td>$ {product.price}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Status</td>\r\n                                        <td>{stock(product.stock)}</td>\r\n                                    </tr>\r\n\r\n                                    </tbody>\r\n                                </table>\r\n                                <div style={Styles.marginBottom}>\r\n                                    <button onClick={addQuantity} className=\"ui green button\">+</button>\r\n                                    <button className=\"ui basic button\" style={Styles.marginRightLeft}>{quantity}</button>\r\n                                    <button onClick={subtractQuantity} className=\"ui grey button\">-</button>\r\n                                </div>\r\n                                <button type=\"button\"\r\n                                        onClick={() => goToCart(product, quantity)}\r\n                                        disabled={product.stock === 0}\r\n                                        className=\"fluid ui black button\"\r\n                                >Add to Cart</button>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>)\r\n            }\r\n\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.productDetails.loading,\r\n        error: state.productDetails.error,\r\n        product: state.productDetails.product,\r\n        reviews: state.reviews.reviews\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startGetProductDetails })(ProductDetails);","import '../layout/Footer.css'\r\nimport React, { useEffect, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Styles from '../utilities/styles';\r\nimport history from \"../../history\";\r\n\r\nimport { startGetCartProduct, startRemoveCartItem } from '../../store/actions/index';\r\n\r\nconst Cart = (props) => {\r\n    const { startGetCartProduct, startRemoveCartItem, cartItems   } = props;\r\n    const { state } = props.location;\r\n    document.title = 'Cart | Shop';\r\n\r\n    useEffect(() => {\r\n        if (state) {\r\n\r\n            startGetCartProduct(state._id, state.quantity);\r\n        }\r\n\r\n    }, [state, startGetCartProduct]);\r\n\r\n\r\n    const length = () => {\r\n        if (cartItems.length === 0) {\r\n            return (\r\n                <Fragment>\r\n                    <h1 style={Styles.marginTop} className=\"ui visible yellow message header\">Your cart is empty!</h1>\r\n                    <Link to=\"/\">\r\n                        <button className=\"ui black button massive container\">Shop Around</button>\r\n                    </Link>\r\n                </Fragment>\r\n\r\n            )\r\n        } else {\r\n            return (\r\n                <h1 style={{marginBottom: '20px', marginTop: '10px'}} className=\"ui header container\">SHOPPING CART</h1>\r\n            )\r\n        }\r\n    };\r\n\r\n    const totalPrice = () => {\r\n        let totalPrice = 0;\r\n\r\n        cartItems.forEach((item) => {\r\n            return totalPrice = totalPrice + (Number(item.quantity) * Number(item.price));\r\n        });\r\n\r\n        return totalPrice.toFixed(2);\r\n    };\r\n\r\n\r\n    const subTotals = () => {\r\n        let sum = 0;\r\n        cartItems.forEach((item) => {\r\n            return sum = sum + item.quantity;\r\n        });\r\n\r\n        return (\r\n            <Fragment>\r\n                <table className=\"ui basic table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th >SUBTOTALS ({sum}) ITEMS</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td className=\"ui header\">$ {totalPrice()}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </Fragment>\r\n        )\r\n    };\r\n    const removeCartItem = (itemId) => {\r\n        startRemoveCartItem(itemId);\r\n    };\r\n\r\n    const cartList = cartItems.map((item) => {\r\n        return (\r\n            <Fragment key={item._id}>\r\n                <div className=\"item container\">\r\n\r\n                    <div className=\"ui stackable grid container\">\r\n                        <div className=\"four wide column\">\r\n                            <div className=\"column\">\r\n                                <img src={`${item.image}`}\r\n                                     alt={item.description}\r\n                                     width=\"150\"\r\n                                     height=\"100\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"three wide column\">\r\n                            <div className=\"column\">\r\n                                <div className=\"ui header\">{item.name}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"two wide column\">\r\n                            <div className=\"column\">\r\n                                <div className=\"ui header\">$ {item.price}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"two wide column\">\r\n                            <div className=\"column\">\r\n                                <button className=\"ui black button\">{item.quantity}</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"one wide column\">\r\n                            <div className=\"column\">\r\n                                <button className=\"\" onClick={() => removeCartItem(item._id)} type=\"button\">\r\n                                    <i className=\"ui red trash icon\"/>\r\n                                </button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    });\r\n\r\n    const goToCheckOut = () => {\r\n        history.push('/checkout/shipping');\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>{length()}</div>\r\n            <div className=\"ui relaxed divided list container\">\r\n                {cartList}\r\n                {subTotals()}\r\n            </div>\r\n            <div className=\"ui container\">\r\n                <button disabled={cartItems.length === 0} onClick={goToCheckOut} className=\"ui black button centerElement\" type=\"button\">PROCEED TO CHECKOUT\r\n                </button>\r\n                <div style={Styles.marginTop}>\r\n                    <Link to=\"/\">\r\n                        {\r\n                            cartItems.length > 0 && (<button className=\"ui blue button centerElement\">Keep Shopping</button>)\r\n                        }\r\n                    </Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cartItems: state.cart.cartItems\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { startGetCartProduct, startRemoveCartItem })(Cart);","import '../layout/Footer.css'\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Styles from '../utilities/styles';\r\nimport history from \"../../history\";\r\nimport { startLogIn } from '../../store/actions/index';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst LogIn = (props) => {\r\n    document.title = 'Login | Shop';\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [formError, setFormError] = useState('');\r\n    const [showFormError, setShowFormError] = useState('hidden');\r\n    const [showLoginError, setShowLoginError] = useState('hidden');\r\n    const { startLogIn, login, error, loginMessage } = props;\r\n\r\n    useEffect(() => {\r\n        if (login) {\r\n            history.push('/');\r\n        }\r\n\r\n    }, [login]);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowLoginError('visible')\r\n        }\r\n    }, [error]);\r\n\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!email || !password) {\r\n            setFormError('Please, enter both your email and password.');\r\n            setShowFormError('visible');\r\n        }\r\n\r\n        const userCredentials = {\r\n            email,\r\n            password\r\n        }\r\n\r\n        startLogIn(userCredentials);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui stackable grid container\">\r\n                <div className=\"sixteen wide column\">\r\n                    <div className=\"column\">\r\n                        <h1 className=\"header\">LOG IN</h1>\r\n                            <form className=\"ui form\" onSubmit={onFormSubmit}>\r\n                                <div className=\"field\">\r\n                                    <label className=\"label\">Email</label>\r\n                                    <input style={Styles.marginBottom}\r\n                                           type=\"email\"\r\n                                           value={email}\r\n                                           onChange={(event) => setEmail(event.target.value)}\r\n                                    />\r\n\r\n                                    <label className=\"label\">Password</label>\r\n                                    <input style={Styles.marginBottom}\r\n                                           type=\"password\"\r\n                                           value={password}\r\n                                           onChange={(event) => setPassword(event.target.value)}\r\n                                    />\r\n                                    <div style={{width: '250px'}} className=\"centerElement\">\r\n                                        <button type=\"submit\" className=\"ui fluid black button\">Log In</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        <div className={`ui ${showFormError} red message header`}>{formError}</div>\r\n                        <div className={`ui ${showLoginError} red message header`}>{loginMessage}</div>\r\n                        <p className=\"ui header\">New Customer ? <Link to=\"/users/register\">Sign Up</Link></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        login: state.authentication.login,\r\n        error: state.authentication.error,\r\n        loginMessage: state.authentication.loginMessage,\r\n        user: state.authentication.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startLogIn })(LogIn);","const pattern = {\r\n    name: /^([^\\d])[a-zA-Z\\s]+$/,\r\n    firstName: /^([^\\d])[a-zA-Z\\s]+$/,\r\n    lastName: /^[a-zA-Z\\s-]+$/,\r\n    email: /^([\\w-_.\\d]+)@([a-z]+)\\.([a-z]{2,20})?([a-z.]{2,20})$/,\r\n    password: /^([a-zA-Z.-_@#*\\d]{5,})$/,\r\n    age: /^[\\d]([.\\d]{1,2})?$/\r\n}\r\n\r\nexport default pattern;","import '../layout/Footer.css'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Styles from \"../utilities/styles\";\r\nimport pattern from \"../utilities/RegexPattern\";\r\nimport { startRegister, resetRegistrationMessage } from '../../store/actions/index';\r\n\r\nconst Register = (props) => {\r\n    document.title = 'New User Registration | Shop';\r\n    const [name, setName] = useState('');\r\n    const [nameError, setNameError] = useState('');\r\n    const [showNameErrorMessage, setShowNameErrorMessage] = useState('hidden');\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState('hidden');\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [showPasswordErrorMessage, setShowPasswordErrorMessage] = useState('hidden');\r\n\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [confirmPasswordError, setConfirmPasswordError] = useState('');\r\n    const [showConfirmPasswordErrorMessage, setShowConfirmPasswordErrorMessage] = useState('hidden');\r\n    const [picture, setPicture] = useState();\r\n    const [previewSource, setPreviewSource] = useState();\r\n\r\n    const [formError, setFormError] = useState('');\r\n    const [showFormError, setShowFormError] = useState('hidden');\r\n\r\n    const [showRegistrationErrorMessage, setShowRegistrationErrorMessage] = useState('hidden');\r\n\r\n    const { startRegister, resetRegistrationMessage, registrationMessage } = props;\r\n\r\n    useEffect(() => {\r\n        if (registrationMessage) {\r\n            setShowRegistrationErrorMessage('visible');\r\n        }\r\n\r\n    }, [registrationMessage]);\r\n\r\n    useEffect(() => {\r\n        resetRegistrationMessage('');\r\n        setShowRegistrationErrorMessage('hidden');\r\n\r\n    }, [resetRegistrationMessage, setShowRegistrationErrorMessage]);\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (picture) {\r\n            previewFile(picture)\r\n        }\r\n    }, [picture]);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setConfirmPasswordError('Confirm Password must match password exactly!');\r\n            setShowConfirmPasswordErrorMessage('visible');\r\n            setTimeout(() => {\r\n                setConfirmPasswordError('Confirm Password must match password exactly!');\r\n                setShowConfirmPasswordErrorMessage('hidden');\r\n            }, 3000);\r\n        }\r\n\r\n        if (email.match(pattern.email) && password.match(pattern.password) && name.match(pattern.name)) {\r\n            const newUser = {\r\n                name,\r\n                email,\r\n                password\r\n            };\r\n\r\n            const data = new FormData();\r\n            data.append('image', picture);\r\n            startRegister(newUser, data);\r\n\r\n        } else {\r\n            setFormError('Please check to confirm that each field is filled correctly!');\r\n            setShowFormError('visible');\r\n        }\r\n\r\n    };\r\n\r\n    const onNameChange = (event) => {\r\n        setName(event.target.value);\r\n        if (!name.match(pattern.name)) {\r\n            setNameError('You name must have at least two characters!');\r\n            setShowNameErrorMessage('visible');\r\n        } else {\r\n            setNameError('');\r\n            setShowNameErrorMessage('hidden');\r\n\r\n        }\r\n    }\r\n\r\n    const onEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n        if (!email.match(pattern.email)) {\r\n            setEmailError('Please, enter a valid email address.');\r\n            setEmailErrorMessage('visible');\r\n        } else {\r\n            setEmailError('');\r\n            setEmailErrorMessage('hidden');\r\n        }\r\n    };\r\n\r\n    const onPasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n        if (!password.match(pattern.password)) {\r\n            setPasswordError('Your password must be at least six characters long. Optionally, you can include special characters( * & # @ _ -).');\r\n            setShowPasswordErrorMessage('visible');\r\n        } else {\r\n            setPasswordError('');\r\n            setShowPasswordErrorMessage('hidden');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"ui stackable grid container\">\r\n            <div className=\"sixteen wide column\">\r\n                <div className=\"column\">\r\n                    <h1 className=\"ui header\">SIGN UP</h1>\r\n                    <form className=\"ui form\" onSubmit={onFormSubmit}>\r\n                        <div className=\"field\">\r\n                            <label className=\"label\">Full Name</label>\r\n                            <input type=\"text\"\r\n                                   value={name}\r\n                                   onChange ={onNameChange}\r\n                                   placeholder=\"Please, enter your full name.\"\r\n                                   style={Styles.marginBottom}\r\n                            />\r\n                            <p className={`ui red ${showNameErrorMessage} message`}>{nameError}</p>\r\n\r\n                            <label className=\"label\">Email Address</label>\r\n                            <input type=\"email\"\r\n                                   value={email}\r\n                                   onChange={onEmailChange}\r\n                                   placeholder=\"Please, enter a valid email address.\"\r\n                                   style={Styles.marginBottom}\r\n                            />\r\n                            <p className={`ui red ${emailErrorMessage} message`}>{emailError}</p>\r\n\r\n                            <label className=\"label\">Password</label>\r\n                            <input type=\"password\"\r\n                                   value={password}\r\n                                   onChange={onPasswordChange}\r\n                                   placeholder=\"Please, enter your password.\"\r\n                                   style={Styles.marginBottom}\r\n                            />\r\n                            <p className={`ui red ${showPasswordErrorMessage} message`}>{passwordError}</p>\r\n\r\n                            <label className=\"label\">ConfirmPassword</label>\r\n                            <input type=\"password\"\r\n                                   value={confirmPassword}\r\n                                   placeholder=\"Please, confirm your password\"\r\n                                   onChange={(event => setConfirmPassword(event.target.value))}\r\n                                   style={Styles.marginBottom}\r\n                            />\r\n                            <p className={`ui red ${showConfirmPasswordErrorMessage} message`}>{confirmPasswordError}</p>\r\n\r\n                            <label className=\"label\">\r\n                                <input type=\"file\"\r\n                                       onChange={(event => setPicture(event.target.files[0]))}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"centerElement\" style={{width: '250px'}}>\r\n                            <button style={Styles.marginBottom} className=\"fluid ui black button\">Sign Up</button>\r\n                        </div>\r\n                    </form>\r\n                    <p className={`ui red ${showFormError} message header`}>{formError}</p>\r\n                    <p className={`ui red ${showRegistrationErrorMessage} message header`}>{registrationMessage}</p>\r\n                    { previewSource && (\r\n                        <img src={previewSource} alt=\"chosen\"\r\n                             width=\"180px\"/>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        registrationMessage: state.newUser.registrationMessage\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startRegister, resetRegistrationMessage })(Register);","import React, {useEffect, Fragment } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport history from \"../../history\";\r\n\r\nimport { startGetUserProfile, startGetUserMyOrders, startUploadProfileImage } from '../../store/actions/index';\r\nimport Loader from \"../utilities/Loader\";\r\nimport Error from \"../utilities/Error\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n    document.title = 'Procfile & Orders | Shop';\r\n    const { startGetUserProfile, userProfile, user, startGetUserMyOrders, userOrders, loading, error } = props;\r\n\r\n    useEffect(() => {\r\n        if (user.name) {\r\n            startGetUserProfile();\r\n        } else {\r\n            history.push('/users/login');\r\n        }\r\n\r\n    }, [user, startGetUserProfile]);\r\n\r\n    useEffect(() => {\r\n        if (user.name) {\r\n            startGetUserMyOrders();\r\n        } else {\r\n            history.push('/users/login');\r\n        }\r\n    }, [user, startGetUserMyOrders]);\r\n\r\n    const onUpdateClick = () => {\r\n        history.push('/users/update/profile');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui stackable grid container\">\r\n                    <div className=\"four wide column\">\r\n                        <div className=\"column\">\r\n                            <h1 className=\"ui header\">{userProfile.name}</h1>\r\n\r\n                            <img src={`${userProfile.image}`}\r\n                                 alt={userProfile.name}\r\n                                 width=\"180px\"\r\n                            />\r\n                            <h3>{userProfile.email}</h3>\r\n                            <div>\r\n                                <button onClick={onUpdateClick} className=\"ui black button\">UPDATE PROFILE</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"twelve wide column\">\r\n                        <div className=\"column\">\r\n                            <h1 className=\"ui headers\">ORDERS</h1>\r\n                            {\r\n                                loading && <Loader />\r\n                            }\r\n                            {\r\n                                error ? <Error /> : (\r\n                                    userOrders.map((order) => {\r\n                                        return (\r\n                                            <Fragment key={order._id}>\r\n                                                <table className=\"ui celled table\">\r\n                                                    <thead>\r\n                                                    <tr>\r\n                                                        <th>ID</th>\r\n                                                        <th>DATE</th>\r\n                                                        <th>TOTAL</th>\r\n                                                        <th>PAID</th>\r\n                                                        <th>DELIVERED</th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                    <tr>\r\n                                                        <td data-label=\"Id\">{order._id}</td>\r\n                                                        <td data-label=\"Date\">{order.createdAt.substr(0, 10)}</td>\r\n                                                        <td data-label=\"Total\">$ {order.totalPrice.toFixed(2)}</td>\r\n                                                        <td data-label=\"Paid\">{order.isPaid ? order.paymentResult.update_time.substr(0, 10) : (<div className=\"ui red visible message\">Not paid</div>)}</td>\r\n                                                        <td data-label=\"Delivered\">{order.isDelivered ? <div className=\"ui visible green message\">Delivered</div> : (<div className=\"ui red visible message\">Not Delivered</div>)}</td>\r\n                                                        <td>\r\n                                                            <Link to={`/orders/${order._id}/details`}>\r\n                                                                <button className=\"ui black button\">Order Details</button>\r\n                                                            </Link>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                                <hr/>\r\n                                            </Fragment>\r\n                                        )\r\n                                    }))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>)\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.userProfile,\r\n        user: state.authentication.user,\r\n        userOrders: state.order.userOrders,\r\n        loading: state.order.loading,\r\n        error: state.order.error,\r\n        errorMessage: state.order.errorMessage\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { startGetUserProfile, startGetUserMyOrders, startUploadProfileImage })(Profile);","import '../layout/Footer.css'\r\nimport React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport history from \"../../history\";\r\nimport Styles from \"../utilities/styles\";\r\nimport { startUpdateProfile } from '../../store/actions/index';\r\n\r\nconst UpdateProfile = (props) => {\r\n    document.title = 'Update Procfile | Shop';\r\n    const { userProfile, loggedInUser, startUpdateProfile } = props;\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [picture, setPicture] = useState();\r\n    const [previewSource, setPreviewSource] = useState();\r\n\r\n    useEffect(() => {\r\n        if (!loggedInUser.name) {\r\n            history.push('/users/login');\r\n        } else {\r\n            setName(userProfile.name);\r\n            setEmail(userProfile.email)\r\n        }\r\n\r\n    }, [loggedInUser, userProfile]);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const update = {\r\n            name,\r\n            email\r\n        };\r\n\r\n        startUpdateProfile(update, previewSource);\r\n    }\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (picture) {\r\n            previewFile(picture)\r\n        }\r\n    }, [picture]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui grid container\">\r\n                <div className=\"sixteen wide column\">\r\n                    <div className=\"column\">\r\n                        <form className=\"ui form\" onSubmit={onFormSubmit}>\r\n                            <div className=\"field\">\r\n                                <label className=\"label\">Full Name</label>\r\n                                <input type=\"text\"\r\n                                       value={name}\r\n                                       onChange={(event => setName(event.target.value))}\r\n                                       placeholder=\"Please, enter your full name.\"\r\n                                       style={Styles.marginBottom}\r\n                                       autoFocus\r\n                                />\r\n\r\n                                <label className=\"label\">Email Address</label>\r\n                                <input type=\"email\"\r\n                                       value={email}\r\n                                       onChange={(event => setEmail(event.target.value))}\r\n                                       placeholder=\"Please, enter a valid email address.\"\r\n                                       style={Styles.marginBottom}\r\n                                />\r\n\r\n                                <label className=\"label\">\r\n                                    <input type=\"file\"\r\n                                           accept=\"image/*\"\r\n                                           onChange={(event => setPicture(event.target.files[0]))}\r\n                                    />\r\n                                </label>\r\n                                <div style={{width: '250px'}} className=\"centerElement\">\r\n                                    <button type=\"submit\" className=\"fluid ui black button\">UPDATE</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        { previewSource && (\r\n                            <img src={previewSource} alt=\"chosen\"\r\n                            width=\"180px\"/>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.userProfile,\r\n        loggedInUser: state.authentication.user\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { startUpdateProfile })(UpdateProfile);","import '../layout/Footer.css'\r\nimport React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CheckoutProcess = ({ shipping, payment, placeOrder}) => {\r\n    const disable = true;\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui grid\">\r\n                <div className=\"sixteen wide column\">\r\n                    <div className=\"column\">\r\n                        <div className=\"ui large breadcrumb centerElement\">\r\n\r\n                            {\r\n                                shipping ? (\r\n                                    <Fragment>\r\n                                        <Link to=\"/checkout/shipping\">\r\n                                            <div className=\"section \">Shipping</div>\r\n                                            <i className=\"right chevron icon divider\">{}</i>\r\n                                        </Link>\r\n                                    </Fragment>\r\n                                ) : (\r\n                                    <Fragment>\r\n                                        <button disabled={disable} className=\"ui basic button\">\r\n                                            <Link to=\"/checkout/shipping\">Shipping</Link>\r\n                                        </button>\r\n                                        <i className=\"right chevron icon divider\">{}</i>\r\n                                    </Fragment>\r\n                                )\r\n                            }\r\n\r\n                            {\r\n                                payment ? (\r\n                                    <Fragment>\r\n                                        <Link to=\"/checkout/payment\">\r\n                                            <div className=\"section\">Payment</div>\r\n                                            <i className=\"right chevron icon divider\">{}</i>\r\n                                        </Link>\r\n                                    </Fragment>\r\n                                ) : (\r\n                                    <Fragment>\r\n                                        <button disabled={disable} className=\"ui basic button\">\r\n                                            <Link to=\"/checkout/payment\">Payment</Link>\r\n                                        </button>\r\n                                        <i className=\"right chevron icon divider\">{}</i>\r\n                                    </Fragment>\r\n                                )\r\n                            }\r\n\r\n                            {\r\n                                placeOrder ? (\r\n                                    <Fragment>\r\n                                        <Link to=\"/checkout/placeorder\">\r\n                                            <div className=\"section\" disabled>Place Order</div>\r\n                                            <i className=\"right chevron icon divider\">{}</i>\r\n                                        </Link>\r\n                                    </Fragment>\r\n                                ) : (\r\n                                    <Fragment>\r\n                                        <button disabled={disable} className=\"ui basic button\">\r\n                                            <Link to=\"/checkout/placeorder\">Place Order</Link>\r\n                                        </button>\r\n                                        <i className=\"right chevron icon divider\">{}</i>\r\n                                    </Fragment>\r\n                                )\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CheckoutProcess;","import '../layout/Footer.css'\r\nimport React, {Fragment, useEffect, useState} from \"react\";\r\nimport Styles from '../utilities/styles';\r\nimport { connect } from \"react-redux\";\r\nimport { getShippingAddress } from '../../store/actions/index';\r\nimport history from \"../../history\";\r\nimport CheckoutProcess from \"./CheckoutProcess\";\r\n\r\n\r\nconst Shipping = (props) => {\r\n    document.title = 'Shipping | Shop';\r\n    const { getShippingAddress, loggedInUser, shippingAddress } = props;\r\n    const [address, setAddress] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [postalCode, setPostalCode] = useState('');\r\n    const [country, setCountry] = useState('');\r\n\r\n    const [formError, setFormError] = useState('');\r\n    const [showFormError, setShowFormError] = useState('hidden');\r\n\r\n    useEffect(() => {\r\n        if (!loggedInUser.name) {\r\n            history.push('/users/login');\r\n        } else {\r\n            if (shippingAddress.country) {\r\n                setAddress(shippingAddress.address);\r\n                setCity(shippingAddress.city);\r\n                setPostalCode(shippingAddress.postalCode);\r\n                setCountry(shippingAddress.country);\r\n            }\r\n        }\r\n    }, [loggedInUser, shippingAddress]);\r\n\r\n\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const shippingAddress = {\r\n            address,\r\n            city,\r\n            postalCode,\r\n            country\r\n        };\r\n\r\n        if (address && city && country) {\r\n\r\n            getShippingAddress(shippingAddress);\r\n            localStorage.setItem('shipping', JSON.stringify(shippingAddress));\r\n            history.push('/checkout/payment');\r\n\r\n        } else {\r\n            setFormError('Please, check to ensure that all the fields are completed correctly.');\r\n            setShowFormError('visible');\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui grid container\">\r\n                <div className=\"sixteen wide column\">\r\n                    <div className=\"column\">\r\n                        <CheckoutProcess shipping />\r\n                        <h1 className=\"ui header\">SHIPPING</h1>\r\n                        <form className=\"ui form\" onSubmit={onFormSubmit}>\r\n                            <div className=\"field\">\r\n                                <label className=\"label\">Address</label>\r\n                                <input type=\"text\"\r\n                                       value={address}\r\n                                       onChange={(event => setAddress(event.target.value))}\r\n                                       style={Styles.marginBottom}\r\n                                       autoFocus\r\n                                       placeholder=\"Please, enter your address here\"\r\n                                />\r\n                                <label className=\"label\">City</label>\r\n                                <input type=\"text\"\r\n                                       value={city}\r\n                                       onChange={(event => setCity(event.target.value))}\r\n                                       style={Styles.marginBottom}\r\n                                       placeholder=\"Please, enter your city here\"\r\n                                />\r\n                                <label className=\"label\">Postal Code</label>\r\n                                <input type=\"text\"\r\n                                       value={postalCode}\r\n                                       onChange={(event => setPostalCode(event.target.value))}\r\n                                       style={Styles.marginBottom}\r\n                                       placeholder=\"Please, enter your postal code here\"\r\n                                />\r\n                                <label className=\"label\">Country</label>\r\n                                <input type=\"text\"\r\n                                       value={country}\r\n                                       onChange={(event => setCountry(event.target.value))}\r\n                                       style={Styles.marginBottom}\r\n                                       placeholder=\"Please, enter your country here\"\r\n                                />\r\n\r\n                                <div className=\"centerElement\" style={{width: '250px'}}>\r\n                                    <button type=\"submit\" className=\"fluid ui black button\">CONTINUE</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <p className={`ui red ${showFormError} message header`}>{formError}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        shippingAddress: state.cart.shippingAddress,\r\n        loggedInUser: state.authentication.user\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getShippingAddress })(Shipping);","import './Payment.css';\r\nimport React, { useEffect, Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport history from \"../../history\";\r\nimport CheckoutProcess from \"./CheckoutProcess\";\r\nimport Styles from '../utilities/styles';\r\nimport { getPaymentMethod } from '../../store/actions/index';\r\n\r\nconst Payment = (props) => {\r\n    document.title = 'Payment Method | Shop';\r\n    const { loggedInUser, getPaymentMethod, shippingAddress } = props;\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    useEffect(() => {\r\n        if (!shippingAddress.country) {\r\n            history.push('/checkout/shipping');\r\n        }\r\n\r\n    }, [shippingAddress]);\r\n\r\n    useEffect(() => {\r\n        if (!loggedInUser.name) {\r\n            history.push('/users/login');\r\n        }\r\n    }, [loggedInUser]);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        getPaymentMethod(paymentMethod);\r\n        localStorage.setItem('paymentMethod', JSON.stringify(paymentMethod));\r\n        history.push('/checkout/placeorder');\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"div ui grid container\">\r\n                <div className=\"sixteen wide column\">\r\n                    <div className=\"column\">\r\n                        <CheckoutProcess shipping payment />\r\n                        <h1 className=\"ui header\">PAYMENT</h1>\r\n                        <h3>SELECT PAYMENT METHOD</h3>\r\n                        <form className=\"ui form\" onSubmit={onFormSubmit}>\r\n                            <input type=\"radio\"\r\n                                   id=\"PayPal\"\r\n                                   name=\"paymentMethod\"\r\n                                   value=\"PayPal\"\r\n                                   style={Styles.marginRight}\r\n                                   onChange={(event => setPaymentMethod(event.target.value))}\r\n                            />\r\n                            <label htmlFor=\"PayPal\">PayPal or Credit Card</label>\r\n                            <br style={Styles.marginBottom}/>\r\n\r\n                            <button style={Styles.marginTop} type=\"submit\" className=\"ui black button\">CONTINUE</button>\r\n\r\n                        </form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.authentication.user,\r\n        shippingAddress: state.cart.shippingAddress\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { getPaymentMethod })(Payment);","import '../layout/Footer.css'\r\nimport React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CheckoutProcess from \"./CheckoutProcess\";\r\nimport Styles from '../utilities/styles';\r\nimport styles from '../utilities/styles';\r\nimport { startGetCreateOrOrder } from '../../store/actions/index';\r\n\r\nconst PlaceOrder = (props) => {\r\n    document.title = 'Order Summary | Shop';\r\n    const { cart, startGetCreateOrOrder } = props;\r\n    let itemsSum = 0;\r\n    cart.cartItems.forEach((item) => {\r\n        return itemsSum = itemsSum + (Number(item.quantity) * Number(item.price));\r\n    });\r\n\r\n    cart.itemsPrice = itemsSum;\r\n\r\n    if (cart.items > 199.99) {\r\n        cart.shippingPrice = 0.00;\r\n    } else {\r\n        cart.shippingPrice = 20.00;\r\n    }\r\n\r\n    cart.taxPrice = (0.18 * Number(cart.itemsPrice));\r\n    cart.totalPrice = Number(Number(cart.itemsPrice) + Number(cart.taxPrice) + Number(cart.shippingPrice));\r\n\r\n\r\n    const cartItemsList = cart.cartItems.length === 0 ? (<div className=\"ui yellow visible message\">Your cart is empty</div>) : (\r\n        <Fragment>\r\n            {\r\n                cart.cartItems.map((item) => {\r\n                    return (\r\n                        <Fragment key={item._id}>\r\n                            <div className=\"ui stackable grid column\">\r\n                                <div className=\"three wide column\">\r\n                                    <div className=\"column\">\r\n                                        <div style={styles.marginBottom} className=\"image\">\r\n                                            <img\r\n                                                src={`${item.image}`}\r\n                                                alt={item.description}\r\n                                                width='100px'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"two wide column\">\r\n                                    <div className=\"column\">\r\n                                        <div style={styles.marginBottom}>\r\n                                            <Link to={`/products/${item._id}/details`}>\r\n                                                <div>{item.name}</div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"six wide column\">\r\n                                    <div className=\"column\">\r\n                                        <div>\r\n                                            {item.quantity} x ${item.price} = ${item.quantity * item.price}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr/>\r\n                        </Fragment>\r\n                    );\r\n                })\r\n            }\r\n        </Fragment>\r\n    );\r\n\r\n    const onPlaceOrderClick =() => {\r\n        const newOrder = {\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        };\r\n\r\n        startGetCreateOrOrder(newOrder);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div style={Styles.marginBottom} className=\"centerElement\">\r\n                <CheckoutProcess login shipping payment placeOrder />\r\n            </div>\r\n            <div className=\"ui stackable grid container\">\r\n                <div className=\"twelve wide column\">\r\n                    <div className=\"column\">\r\n                        <h2 className=\"ui header\">SHIPPING</h2>\r\n                        <div style={Styles.marginBottom}>\r\n                            <p>\r\n                                <strong>Shipping:</strong> <span style={Styles.marginRight}> {cart.shippingAddress.address},</span>\r\n                                <span style={Styles.marginRight}>{cart.shippingAddress.city},</span>\r\n                                <span style={Styles.marginRight}>{cart.shippingAddress.postalCode},</span>\r\n                                <span>{cart.shippingAddress.country}.</span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"column\">\r\n                        <h1 style={Styles.marginTop} className=\"ui header\">PAYMENT METHOD</h1>\r\n                        <div style={Styles.marginBottom}>\r\n                            <p>\r\n                                <strong>Method:</strong> <span>{cart.paymentMethod}</span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"column\">\r\n                        <h1 style={Styles.marginTop} className=\"ui header\">ORDER ITEMS</h1>\r\n                        <div className=\"ui container\">\r\n                            {cartItemsList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"four wide column\">\r\n                    <div className=\"column\">\r\n                        <h2 className=\"ui header\">ORDER SUMMARY</h2>\r\n                        <table className=\"ui celled table\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <td data-label=\"Items\">Items</td>\r\n                                <td data-label=\"ItemsPrice\">${cart.itemsPrice.toFixed(2)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td data-label=\"Shipping\">Shipping</td>\r\n                                <td data-label=\"ShippingPrice\">${cart.shippingPrice.toFixed(2)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td data-label=\"Tax\">Tax</td>\r\n                                <td data-label=\"TaxPrice\">${cart.taxPrice.toFixed(2)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className=\"ui header\" data-label=\"Total\">Total</td>\r\n                                <td className=\"ui header\" data-label=\"TotalAmount\">${cart.totalPrice.toFixed(2)}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <button onClick={onPlaceOrderClick} className=\"ui fluid black button\">PLACE ORDER</button>\r\n                        {}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startGetCreateOrOrder })(PlaceOrder);","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\nimport { startGetOrderDetails } from '../../store/actions/index';\r\nimport { startGetOrderPayment, resetOrderPayment } from '../../store/actions/index';\r\nimport Loader from \"../utilities/Loader\";\r\nimport Error from \"../utilities/Error\";\r\nimport Styles from \"../utilities/styles\";\r\nimport styles from \"../utilities/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst axiosOption = {\r\n    mode: 'cors',\r\n    withCredentials: true\r\n};\r\n\r\n\r\nconst OrderDetails = (props) => {\r\n    document.title = 'Order Details | Shop';\r\n    const {\r\n        loading, error, orderDetails, startGetOrderDetails, resetOrderPayment,\r\n        startGetOrderPayment, paymentLoading, loggedInUser, match } = props;\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    let sum = 0;\r\n\r\n\r\n    useEffect(() => {\r\n        const getPayPalClientId = async () => {\r\n            const url = '/config/paypal';\r\n            const { data } = await axios.get(url, axiosOption);\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            if (!script.src) {\r\n                script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\r\n                script.async = true;\r\n                script.onload = () => {\r\n                    setSdkReady(true);\r\n                };\r\n                document.body.appendChild(script);\r\n            }\r\n        }\r\n\r\n        if (!orderDetails || orderDetails._id !== match.params.id) {\r\n            resetOrderPayment();\r\n            startGetOrderDetails(match.params.id);\r\n        } else if (!orderDetails.isPaid) {\r\n            if (!window.paypal) {\r\n                getPayPalClientId();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n\r\n    }, [match, startGetOrderDetails, orderDetails, resetOrderPayment]);\r\n\r\n\r\n\r\n    const onPaymentClick = (paymentResult) => {\r\n        startGetOrderPayment(orderDetails._id, paymentResult);\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <Loader />\r\n        )\r\n    } else if (error) {\r\n        return (\r\n            <Error />\r\n        )\r\n    } else {\r\n        orderDetails.orderItems.forEach((item) => {\r\n            sum = sum + (Number(item.quantity) * Number(item.price));\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                error && <Error />\r\n            }\r\n            {\r\n                loading ? <Loader /> : (<div className=\"ui stackable grid container\">\r\n                        <div className=\"twelve wide column\">\r\n                            <div className=\"column\">\r\n                                <h1><strong>ORDER {orderDetails._id}</strong></h1>\r\n                                <h2 className=\"ui header\">SHIPPING</h2>\r\n                                <div style={Styles.marginBottom}>\r\n                                    <p><strong>Name: </strong>{orderDetails.user.name}</p>\r\n                                    <p><strong>Email: </strong>{orderDetails.user.email}</p>\r\n\r\n                                    <p>\r\n                                        <strong>Shipping:</strong> <span style={Styles.marginRight}> {orderDetails.shippingAddress.address},</span>\r\n                                        <span style={Styles.marginRight}>{orderDetails.shippingAddress.city},</span>\r\n                                        <span style={Styles.marginRight}>{orderDetails.shippingAddress.postalCode},</span>\r\n                                        <span>{orderDetails.shippingAddress.country}.</span>\r\n                                    </p>\r\n                                    {\r\n                                        orderDetails.isDelivered ? <div className=\"ui green visible message header\">Delivered</div> : <div className=\"ui red visible message header\">Not Delivered</div>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"column\">\r\n                                <h1 style={Styles.marginTop} className=\"ui header\">PAYMENT METHOD</h1>\r\n                                <div style={Styles.marginBottom}>\r\n                                    <p>\r\n                                        <strong>Method:</strong> <span>{orderDetails.paymentMethod}</span>\r\n                                    </p>\r\n                                    {\r\n                                        orderDetails.isPaid ?\r\n                                            <div className=\"ui green visible message header\">Paid</div> :\r\n                                            <div className=\"ui red visible message header\">Not Paid</div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <hr />\r\n                            <h1 style={Styles.marginTop} className=\"ui header\">ORDER ITEMS</h1>\r\n                            {\r\n                                orderDetails.orderItems.map((item) => {\r\n                                    return (\r\n                                        <Fragment key={item._id}>\r\n                                            <div className=\"ui stackable grid container\">\r\n                                                <div className=\"ui three wide column\">\r\n                                                    <div className=\"column\">\r\n                                                        <div style={styles.marginBottom} className=\"image\">\r\n                                                            <img\r\n                                                                src={`${item.image}`}\r\n                                                                alt={item.description}\r\n                                                                width='100px'\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"two wide column\">\r\n                                                    <div className=\"column\">\r\n                                                        <div style={styles.marginBottom}>\r\n                                                            <Link to={`/products/${item._id}/details`}>\r\n                                                                <div>{item.name}</div>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"six wide column\">\r\n                                                    <div className=\"column\">\r\n                                                        <div>\r\n                                                            {item.quantity} x ${item.price} = ${item.quantity * item.price}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <hr/>\r\n                                        </Fragment>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"four wide column\">\r\n                            <div className=\"column\">\r\n                                <h2 className=\"ui header\">ORDER SUMMARY</h2>\r\n                                <table className=\"ui celled table\">\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td data-label=\"Items\">Items</td>\r\n                                        <td data-label=\"ItemsPrice\">${sum.toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td data-label=\"Shipping\">Shipping</td>\r\n                                        <td data-label=\"ShippingPrice\">$ {orderDetails.shippingPrice.toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td data-label=\"Tax\">Tax</td>\r\n                                        <td data-label=\"TaxPrice\">$ {orderDetails.taxPrice.toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"ui header\" data-label=\"Total\">Total</td>\r\n                                        <td className=\"ui header\" data-label=\"TotalAmount\">$ {orderDetails.totalPrice.toFixed(2)}</td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                {\r\n                                    !orderDetails.isPaid && (\r\n                                        <Fragment>\r\n                                            {\r\n                                                paymentLoading && <Loader />\r\n                                            }\r\n                                            {\r\n                                                !sdkReady ? <Loader /> : (\r\n                                                    <PayPalButton amount={orderDetails.totalPrice.toFixed(2)} onSuccess={onPaymentClick} />\r\n                                                )\r\n                                            }\r\n                                        </Fragment>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    loggedInUser\r\n                                    && loggedInUser.isAdmin\r\n                                    && orderDetails.isPaid\r\n                                    && !orderDetails.isDelivered && (\r\n                                        <Link to={{pathname:`/admin/orders/${orderDetails._id}/deliver`, data: orderDetails._id}}>\r\n                                            <button className=\"ui black button\">MARK AS DELIVERED</button>\r\n                                        </Link>\r\n                                    )\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.orderDetails.loading,\r\n        error: state.orderDetails.error,\r\n        errorMessage: state.orderDetails.errorMessage,\r\n        orderDetails: state.orderDetails.orderDetails,\r\n        paymentLoading: state.paidOrder.loading,\r\n        paymentError: state.paidOrder.error,\r\n        loggedInUser: state.authentication.user,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { startGetOrderDetails, resetOrderPayment, startGetOrderPayment })(OrderDetails);","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminHomePageHeader = () => {\r\n    return (\r\n        <Fragment>\r\n            <nav style={{marginTop: '0px'}}>\r\n                <div className=\"ui stackable grid\">\r\n                    <div className=\"ui sixteen column\">\r\n                        <div className=\"ui fluid three item menu\">\r\n                            <div className=\"item\">\r\n                                <Link to=\"/admin\">USERS</Link>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <Link to=\"/list/products\">PRODUCTS</Link>\r\n                                </div>\r\n\r\n                                <div className=\"item\">\r\n                                    <Link to=\"/allorders\">ORDERS</Link>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n\r\n        </Fragment>)\r\n}\r\n\r\nexport default AdminHomePageHeader;","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { startGetAdminUsers, logOut, startAdminDeleteUser, resetDeleteUserMessage } from '../../store/actions/index';\r\nimport Loader from \"../utilities/Loader\";\r\nimport Error from \"../utilities/Error\";\r\nimport history from \"../../history\";\r\n\r\nconst Users = (props) => {\r\n    const [showDeleteUserMessage, setShowDeleteUserMessage] = useState('hidden');\r\n    const { startGetAdminUsers, loading, error, users, user, logOut, deleteUserMessage  } = props;\r\n    useEffect(() => {\r\n        if (user && user.isAdmin) {\r\n            resetDeleteUserMessage('');\r\n            startGetAdminUsers();\r\n        } else {\r\n            logOut();\r\n            localStorage.removeItem('user');\r\n            history.push('/users/login');\r\n        }\r\n\r\n    }, [loading, logOut, startGetAdminUsers, user]);\r\n\r\n    useEffect(() => {\r\n        if (deleteUserMessage) {\r\n            setShowDeleteUserMessage('visible');\r\n        }\r\n    }, [deleteUserMessage]);\r\n\r\n    const onDeleteIconClick = (userId) => {\r\n      if (userId) {\r\n          history.push(`/admin/users/${userId}/delete`);\r\n      }\r\n    };\r\n\r\n    const onEditIconClick = (userId) => {\r\n        if (userId) {\r\n            history.push(`/admin/users/${userId}/edit`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui stackable grid container\">\r\n                <div className=\"sixteen wide column\">\r\n                    <h2 className=\"header\">USERS</h2>\r\n                    <div className=\"column\">\r\n                        {\r\n                            loading && <Loader />\r\n                        }\r\n                        {\r\n                            error ? <Error /> : (\r\n                                <Fragment>\r\n                                    <table className=\"ui celled table\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>NAME</th>\r\n                                            <th>EMAIL</th>\r\n                                            <th>ADMIN</th>\r\n                                            <th>{}</th>\r\n                                            <th>{}</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        {\r\n                                            users.map((user) => {\r\n                                                return(\r\n                                                    <Fragment key={user._id}>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td>{user._id}</td>\r\n                                                                <td>{user.name}</td>\r\n                                                                <td>{user.email}</td>\r\n                                                                <td>{user.isAdmin ? (<i style={{color: 'green'}} className=\"check circle icon\">{}</i>) : (\r\n                                                                    <i className=\"x icon\">{}</i>)}\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <button onClick={() => onEditIconClick(user._id)}>\r\n                                                                        <i className=\"edit icon\">{}</i>\r\n                                                                    </button>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <button onClick={() => onDeleteIconClick(user._id)}>\r\n                                                                        <i style={{color: 'red'}} className=\"trash icon\">{}</i>\r\n                                                                    </button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </Fragment>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </table>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <p className={`ui red ${showDeleteUserMessage} message container header`}>{deleteUserMessage}</p>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.admin.users.loading,\r\n        error: state.admin.users.error,\r\n        deleteUserMessage: state.admin.deleteUserMessage,\r\n        users: state.admin.users.users,\r\n        user: state.authentication.user\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { startGetAdminUsers, logOut, startAdminDeleteUser, resetDeleteUserMessage })(Users);","import React, { Fragment } from \"react\";\r\n\r\nimport AdminHomePageHeader from \"../layout/AdminHomePageHeader\";\r\nimport Users from \"./Users\";\r\n\r\nconst AdminHome = () => {\r\n    document.title = 'Admin | Shop';\r\n    return (\r\n        <Fragment>\r\n            <AdminHomePageHeader />\r\n            <Users />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default AdminHome;","import React, { useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { startAdminDeleteUser, startAdminGetUserProfileToBeDeleted } from '../../store/actions/index';\r\nimport styles from \"../utilities/styles\";\r\nimport history from \"../../history\";\r\n\r\nconst DeleteUser = (props) => {\r\n    document.title = 'Admin Delete User | Shop';\r\n    const { startAdminDeleteUser, startAdminGetUserProfileToBeDeleted, singleUser } = props;\r\n\r\n    useEffect(() => {\r\n        startAdminGetUserProfileToBeDeleted(props.match.params.id);\r\n    }, [startAdminGetUserProfileToBeDeleted, props.match.params.id]);\r\n\r\n    const closeModal = () => {\r\n        history.push(`/admin`);\r\n    };\r\n\r\n    const deleteUser = (userId) => {\r\n        startAdminDeleteUser(userId);\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ui dimmer modals visible active\" onClick={closeModal}>\r\n            <div className=\"ui standard modal visible active\" onClick={(event => event.stopPropagation())}>\r\n                <div className=\"header\">Delete User</div>\r\n                <div className=\"content header\"> Are you sure you want delete <strong style={{textDecorationLine: 'underline'}}>{singleUser.name && singleUser.name}</strong> ?</div>\r\n                <div className=\"actions\">\r\n                    <button onClick={() => deleteUser(props.match.params.id)} style={styles.marginBottom} className=\"ui negative button right floated\">Delete</button>\r\n                    <button onClick={closeModal} style={styles.marginBottom} className=\"ui button right floated\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        singleUser: state.admin.singleUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startAdminDeleteUser, startAdminGetUserProfileToBeDeleted } )(DeleteUser);","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Styles from \"../utilities/styles\";\r\nimport { startAdminGetUserProfileToBeEdited, startAdminEditUserProfile } from '../../store/actions/index';\r\n\r\nconst EditUser = (props) => {\r\n    document.title = 'Admin Edit User | Shop';\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [admin, setAdmin] = useState('');\r\n    const { startAdminGetUserProfileToBeEdited, userToBeEdited, startAdminEditUserProfile } = props;\r\n\r\n    useEffect(() => {\r\n        if (props.match.params.id) {\r\n            startAdminGetUserProfileToBeEdited(props.match.params.id);\r\n        }\r\n    }, [props.match.params.id, startAdminGetUserProfileToBeEdited]);\r\n\r\n    useEffect(() => {\r\n        if (userToBeEdited.name) {\r\n            setName(userToBeEdited.name);\r\n            setEmail(userToBeEdited.email)\r\n            setAdmin(userToBeEdited.isAdmin)\r\n        }\r\n    }, [userToBeEdited]);\r\n\r\n    const onFormSubmit = (event) => {\r\n        let isAdmin = false;\r\n        event.preventDefault();\r\n        if (String(admin) === 'true') {\r\n            isAdmin = true;\r\n        }\r\n\r\n        const edit = {\r\n            name,\r\n            email,\r\n            isAdmin\r\n        };\r\n\r\n        startAdminEditUserProfile(props.match.params.id, edit);\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <div className=\"ui stackable grid container\">\r\n                <div className=\"sixteen wide column\">\r\n                    <div className=\"column\">\r\n                        <h1 className=\"ui header\">EDIT USER</h1>\r\n                        <form className=\"ui form\" onSubmit={onFormSubmit}>\r\n                            <div className=\"field\">\r\n                                <label className=\"label\">Full Name</label>\r\n                                <input type=\"text\"\r\n                                       value={name}\r\n                                       placeholder=\"Please, enter your full name.\"\r\n                                       onChange={(event => setName(event.target.value))}\r\n                                       style={Styles.marginBottom}\r\n                                />\r\n                                <label className=\"label\">Email Address</label>\r\n                                <input type=\"email\"\r\n                                       value={email}\r\n                                       onChange={(event => setEmail(event.target.value))}\r\n                                       placeholder=\"Please, enter a valid email address.\"\r\n                                       style={Styles.marginBottom}\r\n                                />\r\n\r\n                                <label className=\"label\">Is Admin ? (<strong>true or false</strong>)</label>\r\n                                <input type=\"text\"\r\n                                       value={admin}\r\n                                       placeholder=\"Is this user an admin or Not?\"\r\n                                       onChange={(event => setAdmin(event.target.value.toLowerCase()))}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className=\"centerElement\" style={{width: '250px'}}>\r\n                                <button style={Styles.marginBottom} className=\"fluid ui black button\">EDIT USER</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userToBeEdited: state.admin.singleUserToBeEdited\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startAdminGetUserProfileToBeEdited, startAdminEditUserProfile })(EditUser);","import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport history from \"../../history\";\r\n\r\nimport AdminHomePageHeader from \"../layout/AdminHomePageHeader\";\r\nimport Loader from \"../utilities/Loader\";\r\nimport Error from \"../utilities/Error\";\r\nimport { startAdminGetAllProducts } from '../../store/actions/index';\r\n\r\nconst Products = (props) => {\r\n    document.title = 'Admin | Product | Shop';\r\n    const { products, loading, error, startAdminGetAllProducts } = props;\r\n    useEffect(() => {\r\n        startAdminGetAllProducts();\r\n\r\n    }, [startAdminGetAllProducts]);\r\n\r\n    const onDeleteIconClick = (productId) => {\r\n        if (productId) {\r\n            history.push(`/admin/products/${productId}/delete`);\r\n        }\r\n    };\r\n\r\n    const onEditIconClick = (productId) => {\r\n        if (productId) {\r\n            history.push(`/admin/products/${productId}/edit`);\r\n        }\r\n    };\r\n\r\n    const onCreateButtonClick = () => {\r\n        history.push('/create/product');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <AdminHomePageHeader />\r\n            <div className=\"ui stackable grid container\">\r\n                <div className=\"twelve wide column\">\r\n                    <div className=\"column\">\r\n                        <div style={{marginTop: '20px', marginBottom: '20px'}} className=\"ui container\">\r\n                            <h2 style={{marginTop: '0px'}}>PRODUCTS</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"four wide column\">\r\n                        <div className=\"column\">\r\n                            <button onClick={onCreateButtonClick} className=\"ui black button\">+ CREATE PRODUCT</button>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n                <div className=\"ui stackable grid container\">\r\n                    <div className=\"twelve wide column\">\r\n                        <div className=\"column\">\r\n                            {\r\n                                loading && <Loader />\r\n                            }\r\n                            {\r\n                                error ? <Error /> : (\r\n                                    <Fragment>\r\n                                        <table className=\"ui celled table\">\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th>ID</th>\r\n                                                <th>NAME</th>\r\n                                                <th>PRICE</th>\r\n                                                <th>CATEGORY</th>\r\n                                                <th>BRAND</th>\r\n                                                <th>{}</th>\r\n                                                <th>{}</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            {\r\n                                                products.map((product) => {\r\n                                                    return(\r\n                                                        <Fragment key={product._id}>\r\n                                                            <tbody>\r\n                                                            <tr>\r\n                                                                <td>{product._id}</td>\r\n                                                                <td>{product.name}</td>\r\n                                                                <td>{product.price.toFixed(2)}</td>\r\n                                                                <td>{product.category}</td>\r\n                                                                <td>{product.brand}</td>\r\n                                                                <td>\r\n                                                                    <button onClick={() => onEditIconClick(product._id)}>\r\n                                                                        <i className=\"edit icon\">{}</i>\r\n                                                                    </button>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <button type=\"button\" onClick={() => onDeleteIconClick(product._id)}>\r\n                                                                        <i style={{color: 'red'}} className=\"trash icon\">{}</i>\r\n                                                                    </button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            </tbody>\r\n                                                        </Fragment>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </table>\r\n                                    </Fragment>\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.admin.products.loading,\r\n        error: state.admin.products.error,\r\n        errorMessage: state.admin.products.errorMessage,\r\n        products: state.admin.products.products\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startAdminGetAllProducts })(Products);","import './Loader.css'\r\nimport React, { Fragment } from 'react';\r\n\r\nconst ProductCreationLoader = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui grid\">\r\n                <div className=\"ui sixteen column\">\r\n\r\n                    <div className=\"ui segment\">\r\n                        <div className=\"increaseSize\">\r\n                            <div className=\"ui active dimmer increaseSize\">\r\n                                <div className=\"ui massive text loader\">PRODUCT IS BEING CREATED ...</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ProductCreationLoader;","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Styles from \"../utilities/styles\";\r\nimport { startAdminCreateProduct } from '../../store/actions/index';\r\nimport ProductCreationLoader from \"../utilities/ProductCreationLoader\";\r\n\r\nconst CreateProduct = (props) => {\r\n    document.title = 'Admin Create Product | Shop';\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [stock, setStock] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [picture, setPicture] = useState();\r\n    const [previewSource, setPreviewSource] = useState();\r\n    const [productCreationLoader, setProductCreationLoader] = useState(false);\r\n\r\n    const [formError, setFormError] = useState('');\r\n    const [showFormError, setShowFormError] = useState('hidden');\r\n\r\n    const { startAdminCreateProduct } = props;\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (picture) {\r\n            previewFile(picture);\r\n        }\r\n    }, [picture]);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!name || !price || !brand || !stock || !category || !description || !picture) {\r\n            const formError = 'Please, check to conform that all the fields have been correctly field.';\r\n            setFormError(formError);\r\n            setShowFormError('visible');\r\n        } else {\r\n\r\n            const newProduct = {\r\n                name,\r\n                price,\r\n                brand,\r\n                stock,\r\n                category,\r\n                description\r\n            };\r\n\r\n            startAdminCreateProduct(newProduct, previewSource);\r\n\r\n            setFormError('');\r\n            setShowFormError('hidden');\r\n            setProductCreationLoader(true);\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                productCreationLoader ? <ProductCreationLoader /> : (  <div className=\"ui stackable grid container\">\r\n                    <div className=\"sixteen wide column\">\r\n                        <div className=\"column\">\r\n                            <h1 className=\"ui header\">CREATE PRODUCT</h1>\r\n                            <form className=\"ui form\" onSubmit={onFormSubmit}>\r\n                                <div className=\"field\">\r\n                                    <label className=\"label\">Name</label>\r\n                                    <input type=\"text\"\r\n                                           value={name}\r\n                                           onChange={(event => setName(event.target.value))}\r\n                                           placeholder=\"Please, enter the name of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                           autoFocus\r\n                                    />\r\n\r\n                                    <label className=\"label\">Price</label>\r\n                                    <input type=\"number\"\r\n                                           value={price}\r\n                                           onChange={(event => setPrice(event.target.value))}\r\n                                           placeholder=\"Please, enter the price for the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n\r\n                                    <label className=\"label\">Brand</label>\r\n                                    <input type=\"text\"\r\n                                           value={brand}\r\n                                           onChange={(event => setBrand(event.target.value))}\r\n                                           placeholder=\"Please, enter the brand of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n\r\n                                    <label className=\"label\">Count In Stock</label>\r\n                                    <input type=\"number\"\r\n                                           value={stock}\r\n                                           onChange={(event => setStock(event.target.value))}\r\n                                           placeholder=\"Please, enter the total available stock of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n                                    <label className=\"label\">Category</label>\r\n                                    <input type=\"text\"\r\n                                           value={category}\r\n                                           onChange={(event => setCategory(event.target.value))}\r\n                                           placeholder=\"Please, enter the brand of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n                                    <label className=\"label\">Description</label>\r\n                                    <input type=\"text\"\r\n                                           value={description}\r\n                                           onChange={(event => setDescription(event.target.value))}\r\n                                           placeholder=\"Please, enter a clear description of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n                                    <label className=\"label\">Image</label>\r\n                                    <input type=\"file\"\r\n                                           accept=\"image/*\"\r\n                                           onChange={(event => setPicture(event.target.files[0]))}\r\n                                           placeholder=\"Please, enter a clear description of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"centerElement\" style={{width: '250px'}}>\r\n                                    <button style={Styles.marginBottom} className=\"fluid ui black button\">CREATE PRODUCT</button>\r\n                                </div>\r\n                            </form>\r\n                            <p className={`ui red ${showFormError} message header`}>{formError}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>)\r\n            }\r\n            {\r\n                previewSource && (\r\n                    <div className=\"ui container\">\r\n                        <img src={previewSource}\r\n                             alt=\"chosen\"\r\n                             width=\"180px\"\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        createProductError: state\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { startAdminCreateProduct })(CreateProduct);","import React, { useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { startAdminGetProductToBeDeleted, startAdminDeleteProduct } from '../../store/actions/index';\r\nimport styles from \"../utilities/styles\";\r\nimport history from \"../../history\";\r\n\r\nconst DeleteUser = (props) => {\r\n    const { startAdminDeleteProduct, startAdminGetProductToBeDeleted, productToBeDeleted } = props;\r\n\r\n    useEffect(() => {\r\n        startAdminGetProductToBeDeleted(props.match.params.id);\r\n    }, [startAdminGetProductToBeDeleted, props.match.params.id]);\r\n\r\n    const closeModal = () => {\r\n        history.push(`/admin/products`);\r\n    };\r\n\r\n    const deleteProduct = (productId) => {\r\n        startAdminDeleteProduct(productId);\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ui dimmer modals visible active\" onClick={closeModal}>\r\n            <div className=\"ui standard modal visible active\" onClick={(event => event.stopPropagation())}>\r\n                <div className=\"header\">Delete Product</div>\r\n                <div className=\"content header\"> Are you sure you want delete <strong style={{textDecorationLine: 'underline'}}>{productToBeDeleted.name}</strong> ?</div>\r\n                <div className=\"actions\">\r\n                    <button onClick={() => deleteProduct(props.match.params.id)} style={styles.marginBottom} className=\"ui negative button right floated\">Delete</button>\r\n                    <button onClick={closeModal} style={styles.marginBottom} className=\"ui button right floated\">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#productModal')\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productToBeDeleted: state.admin.productToBeDeleted\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startAdminGetProductToBeDeleted, startAdminDeleteProduct } )(DeleteUser);","import './Loader.css'\r\nimport React, { Fragment } from 'react';\r\n\r\nconst ProductEditLoader = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui grid\">\r\n                <div className=\"ui sixteen column\">\r\n\r\n                    <div className=\"ui segment\">\r\n                        <div className=\"increaseSize\">\r\n                            <div className=\"ui active dimmer increaseSize\">\r\n                                <div className=\"ui massive text loader\">PRODUCT IS BEING UPDATED ...</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ProductEditLoader;","import React, { Fragment, useState,useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Styles from \"../utilities/styles\";\r\n\r\nimport { startAdminGetProductToBeEdited, startAdminEditProduct } from '../../store/actions/index';\r\nimport ProductEditLoader from \"../utilities/ProductEditLoader\";\r\nimport history from \"../../history\";\r\n\r\nconst EditProduct = (props) => {\r\n    document.title = 'Admin Edit Product | Shop';\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [stock, setStock] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [picture, setPicture] = useState();\r\n    const [previewSource, setPreviewSource] = useState();\r\n    const [productEditLoader, setProductEditLoader] = useState(false);\r\n\r\n    const { startAdminGetProductToBeEdited, startAdminEditProduct, productToBeEdited } = props;\r\n\r\n    useEffect(() => {\r\n        if (props.match.params.id) {\r\n            startAdminGetProductToBeEdited(props.match.params.id);\r\n        } else {\r\n            history.push('/users/login');\r\n        }\r\n\r\n    }, [props.match.params.id, startAdminGetProductToBeEdited]);\r\n\r\n    useEffect(() => {\r\n        if (productToBeEdited.name) {\r\n            setName(productToBeEdited.name);\r\n            setPrice(productToBeEdited.price);\r\n            setBrand(productToBeEdited.brand);\r\n            setStock(productToBeEdited.stock);\r\n            setCategory(productToBeEdited.category);\r\n            setDescription(productToBeEdited.description);\r\n        }\r\n\r\n    }, [productToBeEdited]);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const edit = {\r\n            name,\r\n            price,\r\n            brand,\r\n            stock,\r\n            category,\r\n            description\r\n        };\r\n        setProductEditLoader(true);\r\n\r\n        startAdminEditProduct(props.match.params.id, previewSource, edit);\r\n    };\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (picture) {\r\n            previewFile(picture)\r\n        }\r\n    }, [picture]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                productEditLoader ? <ProductEditLoader /> : (<div className=\"ui stackable grid container\">\r\n                    <div className=\"sixteen wide column\">\r\n                        <div className=\"column\">\r\n                            <h1 className=\"ui header\">EDIT PRODUCT</h1>\r\n                            <form className=\"ui form\" onSubmit={onFormSubmit}>\r\n                                <div className=\"field\">\r\n                                    <label className=\"label\">Name</label>\r\n                                    <input type=\"text\"\r\n                                           value={name}\r\n                                           onChange={(event => setName(event.target.value))}\r\n                                           placeholder=\"Please, enter the name of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                           autoFocus\r\n                                    />\r\n\r\n                                    <label className=\"label\">Price</label>\r\n                                    <input type=\"number\"\r\n                                           value={price}\r\n                                           onChange={(event => setPrice(event.target.value))}\r\n                                           placeholder=\"Please, enter the price for the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n\r\n                                    <label className=\"label\">Brand</label>\r\n                                    <input type=\"text\"\r\n                                           value={brand}\r\n                                           onChange={(event => setBrand(event.target.value))}\r\n                                           placeholder=\"Please, enter the brand of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n\r\n                                    <label className=\"label\">Count In Stock</label>\r\n                                    <input type=\"number\"\r\n                                           value={stock}\r\n                                           onChange={(event => setStock(event.target.value))}\r\n                                           placeholder=\"Please, enter the total available stock of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n                                    <label className=\"label\">Category</label>\r\n                                    <input type=\"text\"\r\n                                           value={category}\r\n                                           onChange={(event => setCategory(event.target.value))}\r\n                                           placeholder=\"Please, enter the brand of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n                                    <label className=\"label\">Description</label>\r\n                                    <input type=\"text\"\r\n                                           value={description}\r\n                                           onChange={(event => setDescription(event.target.value))}\r\n                                           placeholder=\"Please, enter a clear description of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n                                    <label className=\"label\">Image</label>\r\n                                    <input type=\"file\"\r\n                                           accept=\"image/*\"\r\n                                           onChange={(event => setPicture(event.target.files[0]))}\r\n                                           placeholder=\"Please, enter a clear description of the product.\"\r\n                                           style={Styles.marginBottom}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"centerElement\" style={{width: '250px'}}>\r\n                                    <button style={Styles.marginBottom} className=\"fluid ui black button\">EIDT PRODUCT</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n\r\n            { previewSource && (\r\n                <div className=\"ui container\">\r\n                    <img src={previewSource} alt=\"chosen\"\r\n                         width=\"180px\"/>\r\n                </div>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productToBeEdited: state.admin.productToBeEdited\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { startAdminGetProductToBeEdited, startAdminEditProduct } )(EditProduct);","import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport AdminHomePageHeader from \"../layout/AdminHomePageHeader\";\r\nimport Loader from \"../utilities/Loader\";\r\nimport Error from \"../utilities/Error\";\r\nimport { startAdminGetAllOrders } from \"../../store/actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Orders = (props) => {\r\n    document.title = 'Admin | Orders | Shop';\r\n    const { startAdminGetAllOrders, orders, loading, error } = props;\r\n    useEffect(() => {\r\n        startAdminGetAllOrders();\r\n    }, [startAdminGetAllOrders]);\r\n    return (\r\n        <Fragment>\r\n            <AdminHomePageHeader />\r\n            <h1 className='ui container'>ORDERS</h1>\r\n            <div className=\"ui stackable grid container\">\r\n                <div className=\"sixteen wide column\">\r\n                    <div className=\"column\">\r\n                        {\r\n                            loading && <Loader />\r\n                        }\r\n                        {\r\n                            error ? <Error /> : (\r\n                                <Fragment>\r\n                                    <table className=\"ui celled table\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>USER</th>\r\n                                            <th>DATE</th>\r\n                                            <th>TOTAL</th>\r\n                                            <th>PAID</th>\r\n                                            <th>DELIVERED</th>\r\n                                            <th>{}</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        {\r\n                                            orders.map((order) => {\r\n                                                return(\r\n                                                    <Fragment key={order._id}>\r\n                                                        <tbody>\r\n                                                        <tr>\r\n                                                            <td>{order._id}</td>\r\n                                                            <td>{order.user.name}</td>\r\n                                                            <td>{order.createdAt.substr(0, 10)}</td>\r\n                                                            <td>${order.totalPrice.toFixed(2)}</td>\r\n                                                            <td>{order.isPaid && order.paymentResult.update_time.substr(0, 10)}</td>\r\n                                                            <td>{order.isDelivered ?\r\n                                                                <i style={{color: 'green'}} className=\"check circle icon\">{}</i> :\r\n                                                                (<i className=\"x icon\">{}</i>)}\r\n                                                            </td>\r\n\r\n                                                            <td>\r\n                                                                <Link to={{pathname:`/orders/${order._id}/details`, data: order._id}}>\r\n                                                                    <button className=\"ui black button\" type=\"button\">Details</button>\r\n                                                                </Link>\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        </tbody>\r\n                                                    </Fragment>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </table>\r\n                                </Fragment>\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.admin.allOrders.loading,\r\n        error: state.admin.allOrders.error,\r\n        orders: state.admin.allOrders.allOrders\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { startAdminGetAllOrders })(Orders);","import React, { useEffect, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { startAdminMarkOrderAsDelivered } from \"../../store/actions\";\r\nimport Styles from \"../utilities/styles\";\r\nimport styles from \"../utilities/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst OrderDeliver = (props) => {\r\n    document.title = 'Admin Mark As Deliver Order | Shop';\r\n    const { startAdminMarkOrderAsDelivered, paidOrder, match } = props;\r\n    const { data } = props.location;\r\n\r\n\r\n    let sum = 0;\r\n\r\n    useEffect(() => {\r\n\r\n        if (data === match.params.id) {\r\n            startAdminMarkOrderAsDelivered(match.params.id);\r\n        }\r\n\r\n    }, [data, startAdminMarkOrderAsDelivered, match]);\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                paidOrder.isDelivered && (paidOrder.orderItems.forEach((item) => {\r\n                    sum = sum + (Number(item.quantity) * Number(item.price));\r\n                }))\r\n            }\r\n            {\r\n                paidOrder.isDelivered && (<div className=\"ui stackable grid container\">\r\n                        <div className=\"twelve wide column\">\r\n                            <div className=\"column\">\r\n                                <h1><strong>ORDER {paidOrder._id}</strong></h1>\r\n                                <h2 className=\"ui header\">SHIPPING</h2>\r\n                                <div style={Styles.marginBottom}>\r\n                                    <p><strong>Name: </strong>{paidOrder.user.name}</p>\r\n                                    <p><strong>Email: </strong>{paidOrder.user.email}</p>\r\n\r\n                                    <p>\r\n                                        <strong>Shipping:</strong> <span style={Styles.marginRight}> {paidOrder.shippingAddress.address},</span>\r\n                                        <span style={Styles.marginRight}>{paidOrder.shippingAddress.city},</span>\r\n                                        <span style={Styles.marginRight}>{paidOrder.shippingAddress.postalCode},</span>\r\n                                        <span>{paidOrder.shippingAddress.country}.</span>\r\n                                    </p>\r\n                                    {\r\n                                        paidOrder.isDelivered ? <div className=\"ui green visible message header\">Delivered</div> : <div className=\"ui red visible message header\">Not Delivered</div>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"column\">\r\n                                <h1 style={Styles.marginTop} className=\"ui header\">PAYMENT METHOD</h1>\r\n                                <div style={Styles.marginBottom}>\r\n                                    <p>\r\n                                        <strong>Method:</strong> <span>{paidOrder.paymentMethod}</span>\r\n                                    </p>\r\n                                    {\r\n                                        paidOrder.isPaid ?\r\n                                            <div className=\"ui green visible message header\">Paid</div> :\r\n                                            <div className=\"ui red visible message header\">Not Paid</div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                            <hr />\r\n                            <h1 style={Styles.marginTop} className=\"ui header\">ORDER ITEMS</h1>\r\n                            {\r\n                                paidOrder.orderItems.map((item) => {\r\n                                    return (\r\n                                        <Fragment key={item._id}>\r\n                                            <div className=\"ui stackable grid container\">\r\n                                                <div className=\"ui three wide column\">\r\n                                                    <div className=\"column\">\r\n                                                        <div style={styles.marginBottom} className=\"image\">\r\n                                                            <img\r\n                                                                src={item.image}\r\n                                                                alt={item.description}\r\n                                                                width='100px'\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"two wide column\">\r\n                                                    <div className=\"column\">\r\n                                                        <div style={styles.marginBottom}>\r\n                                                            <Link to={`/products/${item._id}`}>\r\n                                                                <div>{item.name}</div>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"six wide column\">\r\n                                                    <div className=\"column\">\r\n                                                        <div>\r\n                                                            {item.quantity} x ${item.price} = ${item.quantity * item.price}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <hr/>\r\n                                        </Fragment>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"four wide column\">\r\n                            <div className=\"column\">\r\n                                <h2 className=\"ui header\">ORDER SUMMARY</h2>\r\n                                <table className=\"ui celled table\">\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td data-label=\"Items\">Items</td>\r\n                                        <td data-label=\"ItemsPrice\">${sum.toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td data-label=\"Shipping\">Shipping</td>\r\n                                        <td data-label=\"ShippingPrice\">$ {paidOrder.shippingPrice.toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td data-label=\"Tax\">Tax</td>\r\n                                        <td data-label=\"TaxPrice\">$ {paidOrder.taxPrice.toFixed(2)}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"ui header\" data-label=\"Total\">Total</td>\r\n                                        <td className=\"ui header\" data-label=\"TotalAmount\">$ {paidOrder.totalPrice.toFixed(2)}</td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                              \r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        paidOrder: state.admin.delivered\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startAdminMarkOrderAsDelivered })(OrderDeliver);","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Styles from '../utilities/styles';\r\nimport { startCreateProductReview, startGetProductDetails } from '../../store/actions/index';\r\n\r\nconst AddReview = (props) => {\r\n    const [rating, setRating] = useState();\r\n    const [comment, setComment] = useState('');\r\n    const [formError, setFormError] = useState('');\r\n    const [showFormError, setShowFormError] = useState('hidden');\r\n    const { startCreateProductReview, startGetProductDetails, error, errorMessage, product, match } = props;\r\n\r\n    useEffect(() => {\r\n        if (match.params.id) {\r\n            startGetProductDetails(match.params.id);\r\n        }\r\n    }, [startGetProductDetails, match]);\r\n\r\n\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!rating || !comment) {\r\n            setFormError('Please, ensure that you have filled both the rating and comment fields correctly.');\r\n            setShowFormError('visible');\r\n        } else {\r\n            const newRating = {\r\n                rating: Number(rating),\r\n                comment\r\n            };\r\n\r\n            startCreateProductReview(match.params.id, newRating);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"ui stackable grid container\">\r\n                <div className=\"ui sixteen wide column\">\r\n                    <div className=\"column\">\r\n                        <h1>WRITE A PRODUCT REVIEW</h1>\r\n                        {\r\n                            error ? <div style={Styles.marginTop} className=\"ui red visible message header\">{errorMessage}</div> : null\r\n                        }\r\n                        {\r\n                            product.name ? (<Fragment>\r\n                                <div className=\"ui header\">{product.name}</div>\r\n                                <img style={Styles.marginBottom} src={`${product.image}`}\r\n                                     alt={product.description}\r\n                                     width=\"300\"\r\n                                     height=\"300\"\r\n                                />\r\n                            </Fragment>) : null\r\n                        }\r\n                        <br/>\r\n                        <form style={Styles.marginTop} className=\"ui form\" onSubmit={onFormSubmit}>\r\n                            <div className=\"field\">\r\n                                <label className=\"label\">Rating</label>\r\n                                <select onChange={(event => setRating(event.target.value))} style={Styles.marginBottom} name=\"rating\">\r\n                                    <option value=\"\">Select Rating</option>\r\n                                    <option value=\"1\">1 - POOR</option>\r\n                                    <option value=\"2\">2 - FAIR</option>\r\n                                    <option value=\"3\">3 - GOOD</option>\r\n                                    <option value=\"4\">4 - VERY GOOD</option>\r\n                                    <option value=\"5\">5 - EXCELLENT</option>\r\n                                </select>\r\n                                <label style={Styles.marginTop} className=\"label\">Comment</label>\r\n                                <textarea style={Styles.marginBottom} onChange={event => setComment(event.target.value)} cols=\"30\" rows=\"10\">{}</textarea>\r\n\r\n                                <button style={Styles.marginTop} type=\"submit\" className=\"ui black button\">ADD COMMENT</button>\r\n\r\n                            </div>\r\n                        </form>\r\n                        <div className={`ui red ${showFormError} message header`}>{formError}</div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.reviews.error,\r\n        errorMessage: state.reviews.errorMessage,\r\n        product: state.productDetails.product\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { startCreateProductReview, startGetProductDetails })(AddReview);","import './components/App.css'\nimport React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"./history\";\n\nimport Header from \"./components/layout/Header\";\nimport Footer from \"./components/layout/Footer\";\nimport HomePage from \"./components/HomePage\";\nimport ProductDetails from \"./components/products/ProductDetails\";\nimport Cart from \"./components/products/Cart\";\nimport LogIn from \"./components/authentication/LogIn\";\nimport Register from \"./components/users/Register\";\nimport Profile from \"./components/users/Profile\";\nimport UpdateProfile from \"./components/users/UpdateProfile\";\nimport Shipping from \"./components/products/Shipping\";\nimport Payment from \"./components/products/Payment\";\nimport PlaceOrder from \"./components/products/PlaceOrder\";\nimport OrderDetails from \"./components/orders/OrderDetails\";\nimport AdminHome from \"./components/admin/AdminHome\";\nimport DeleteUser from \"./components/admin/DeleteUser\";\nimport EditUser from \"./components/admin/EditUser\";\nimport Products from \"./components/admin/Products\";\nimport CreateProduct from \"./components/admin/CreateProduct\";\nimport DeleteProduct from \"./components/admin/DeleteProduct\";\nimport EditProduct from \"./components/admin/EditProduct\";\nimport Orders from \"./components/admin/Orders\";\nimport OrderDeliver from \"./components/admin/OrderDeliver\";\nimport AddReview from \"./components/products/AddReviews\";\n\n\n\nconst App = () => {\n  return (\n      <Router history={history}>\n          <Header />\n          <main className=\"pushDown\">\n              <Switch>\n                  <Route path=\"/\" component={HomePage} exact />\n                  <Route path=\"/products/:id/details\" component={ProductDetails} />\n                  <Route path=\"/cart\" component={Cart} exact />\n                  <Route path=\"/checkout/shipping\" component={Shipping} exact />\n                  <Route path=\"/checkout/payment\" component={Payment} exact />\n                  <Route path=\"/checkout/placeorder\" component={PlaceOrder} exact />\n                  <Route path=\"/orders/:id/details\" component={OrderDetails} />\n                  <Route path=\"/admin/users/:id/delete\" component={DeleteUser} exact />\n                  <Route path=\"/admin/products/:id/delete\" component={DeleteProduct} exact />\n                  <Route path=\"/admin/users/:id/edit\" component={EditUser} exact />\n                  <Route path=\"/admin/products/:id/edit\" component={EditProduct} exact />\n                  <Route path=\"/users/register\" component={Register} exact />\n                  <Route path=\"/users/login\" component={LogIn} exact />\n                  <Route path=\"/users/:id\" component={Profile} exact />\n                  <Route path=\"/users/update/profile\" component={UpdateProfile} exact />\n                  <Route path=\"/admin\" component={AdminHome} exact />\n                  <Route path=\"/create/product\" component={CreateProduct} />\n                  <Route path=\"/list/products\" component={Products} />\n                  <Route path=\"/allorders\" component={Orders} />\n                  <Route path=\"/admin/orders/:id/deliver\" component={OrderDeliver} exact />\n                  <Route path=\"/products/:id/review\" component={AddReview} exact />\n              </Switch>\n          </main>\n          <Footer />\n      </Router>\n  )\n};\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    loading: true,\r\n    error: false,\r\n    message: null,\r\n    totalProducts: 0,\r\n    keyword: '',\r\n    products: []\r\n\r\n};\r\n\r\nconst productsReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case 'SEND_KEY_WORD':\r\n            return {\r\n                ...state,\r\n                keyword: action.payload\r\n            }\r\n        case actionTypes.GET_ALL_PRODUCTS: {\r\n            return {\r\n                loading: false,\r\n                message: 'Products successfully fetched.',\r\n                products: action.payload\r\n            }\r\n        }\r\n\r\n        case actionTypes.GET_TOTAL_PRODUCTS: {\r\n            return {\r\n                ...state,\r\n                totalProducts: action.payload\r\n            }\r\n        }\r\n\r\n        case actionTypes.GET_ALL_PRODUCTS_FAILURE: {\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                message: action.payload,\r\n                loading: false,\r\n                totalProducts: 0,\r\n                products: []\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default productsReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    loading: true,\r\n    error: false,\r\n    message: '',\r\n    product: {}\r\n\r\n};\r\n\r\nconst productDetails = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCT_DETAILS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                message: 'Product has been successfully fetched!',\r\n                product: action.payload\r\n            }\r\n\r\n        }\r\n\r\n        case actionTypes.GET_PRODUCT_DETAILS_FAILURE: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true,\r\n                message: action.payload,\r\n                product: {}\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default productDetails;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst getCartItems = localStorage.getItem('cartItems');\r\n\r\nlet cartItems = [];\r\n\r\nif (getCartItems) {\r\n    const items = JSON.parse(getCartItems);\r\n    cartItems = [...items];\r\n}\r\n\r\nconst INITIAL_DATA = {\r\n    loading: true,\r\n    error: false,\r\n    message: '',\r\n    cartItems: [...cartItems],\r\n    shippingAddress: {},\r\n    paymentMethod: ''\r\n}\r\n\r\nconst cartReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionTypes.RESET_CART_ITEMS: {\r\n            return {\r\n                ...state,\r\n                cartItems: action.payload\r\n            }\r\n        }\r\n\r\n        case actionTypes.RESET_CART_ITEMS_FOR_REGISTERED_USER:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        case actionTypes.GET_SHIPPING_ADDRESS: {\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        }\r\n\r\n        case actionTypes.GET_PAYMENT: {\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        }\r\n\r\n        case actionTypes.GET_CART_PRODUCT: {\r\n            const cart = {...action.payload};\r\n\r\n            const filteredState = state.cartItems.filter((item) => {\r\n                return cart._id === item._id;\r\n            });\r\n\r\n            if (filteredState.length > 0 ) {\r\n                return {\r\n                    ...state\r\n                }\r\n            } else {\r\n                state.cartItems.push(cart);\r\n                return {\r\n                    ...state,\r\n                    loading: false,\r\n                    message: 'Item(s) has been successfully added to cart'\r\n                }\r\n            }\r\n        }\r\n\r\n        case actionTypes.REMOVE_CART_ITEM: {\r\n            const filteredCart = state.cartItems.filter((item) => {\r\n                return item._id !== action.payload\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                cartItems: filteredCart\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cartReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    user: {},\r\n    login: false,\r\n    loginMessage: '',\r\n    error: false\r\n};\r\n\r\nconst authReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOG_IN: {\r\n            return {\r\n                ...state,\r\n                user: { ...action.payload },\r\n                login: true,\r\n                loginMessage: 'You have successfully signed in!',\r\n                error: false\r\n            }\r\n        }\r\n\r\n        case actionTypes.LOG_OUT: {\r\n            return {\r\n                ...state,\r\n                login: false,\r\n                loginMessage: 'You have successfully signed out!',\r\n                error: false,\r\n                user: {}\r\n            }\r\n        }\r\n\r\n        case actionTypes.LOG_IN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                user: {},\r\n                login: false,\r\n                loginMessage: action.payload,\r\n                error: true\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    newUser: {},\r\n    login: false,\r\n    registrationMessage: '',\r\n    error: false\r\n};\r\n\r\nconst registrationReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.REGISTER_USER: {\r\n            return {\r\n                ...state,\r\n                login: true,\r\n                registrationMessage: 'You have successfully registered!',\r\n                error: false,\r\n                newUser: action.payload\r\n            }\r\n        }\r\n\r\n        case actionTypes.REGISTER_USER_FAILURE: {\r\n            return {\r\n                ...state,\r\n                login: false,\r\n                registrationMessage: action.payload,\r\n                error: true,\r\n                newUser: {}\r\n            }\r\n        }\r\n\r\n        case actionTypes.RESET_REGISTERED_USER_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                registrationMessage: action.payload\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default registrationReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    image: ''\r\n};\r\n\r\nconst userReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                name: action.payload.name,\r\n                email: action.payload.email,\r\n                _id: action.payload._id,\r\n                image: action.payload.image\r\n            }\r\n        }\r\n\r\n        case actionTypes.USER_PROFILE_FAILURE: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    success: false,\r\n    error: false,\r\n    errorMessage: '',\r\n    loading: true,\r\n    userOrders: [],\r\n    createdOrder: {}\r\n};\r\n\r\nconst orderReducer = (state= INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_CREATE_ORDER: {\r\n            return {\r\n                ...state,\r\n                success: true,\r\n                error: false,\r\n                errorMessage: 'You have successfully created an order.',\r\n                createdOrder: action.payload\r\n            }\r\n        }\r\n\r\n        case actionTypes.GET_USERS_MY_ORDERS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                errorMessage: '',\r\n                userOrders: action.payload\r\n            }\r\n\r\n        case actionTypes.GET_USERS_MY_ORDERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorMessage: action.payload,\r\n                userOrders: []\r\n            }\r\n\r\n        case actionTypes.GET_CREATE_ORDER_FAILURE:\r\n            return {\r\n                ...state,\r\n                success: false,\r\n                error: true,\r\n                errorMessage: action.payload,\r\n                createdOrder: {}\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default orderReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    loading: true,\r\n    error: false,\r\n    errorMessage: '',\r\n    orderDetails: {}\r\n};\r\n\r\nconst orderDetailsReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_ORDER_DETAILS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                errorMessage: 'You have successfully fetched the order',\r\n                orderDetails: action.payload\r\n            }\r\n\r\n        case actionTypes.GET_CREATE_ORDER_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false,\r\n                errorMessage: action.payload,\r\n                orderDetails: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default orderDetailsReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    loading: true,\r\n    success:false,\r\n    error: false,\r\n    errorMessage: '',\r\n    paidOrder: {}\r\n};\r\nconst orderPaymentReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ORDER_PAYMENT:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                errorMessage: 'You have successfully paid for the your order',\r\n                success: true,\r\n                paidOrder: action.payload\r\n            }\r\n\r\n        case actionTypes.ORDER_PAYMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true,\r\n                errorMessage: 'The payment was not successful!',\r\n                success: false,\r\n                paidOrder: {}\r\n            }\r\n        case actionTypes.ORDER_PAYMENT_RESET:\r\n            return {};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default orderPaymentReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    deleteUserMessage: '',\r\n    singleUser: {},\r\n    singleUserToBeEdited: {},\r\n    productToBeDeleted: {},\r\n    productToBeEdited: {},\r\n    delivered: {},\r\n\r\n    allOrders: {\r\n        loading: true,\r\n        error: false,\r\n        errorMessage: '',\r\n        allOrders: [],\r\n    },\r\n\r\n    users: {\r\n        loading: true,\r\n        error: false,\r\n        errorMessage:'',\r\n        users: [],\r\n    },\r\n\r\n    products: {\r\n        loading: true,\r\n        error: false,\r\n        errorMessage: '',\r\n        products: []\r\n    },\r\n\r\n    orders: {\r\n        loading: true,\r\n        error: false,\r\n        errorMessage:'',\r\n        orders: []\r\n    }\r\n\r\n};\r\n\r\nconst adminReducer = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionTypes.MARK_DELIVERED:\r\n            return {\r\n                ...state,\r\n                delivered: action.payload\r\n            }\r\n\r\n        case actionTypes.ADMIN_GET_ORDERS:\r\n            return {\r\n                ...state,\r\n                allOrders: {\r\n                    loading: false,\r\n                    error: false,\r\n                    errorMessage: '',\r\n                    allOrders: action.payload,\r\n                },\r\n            }\r\n\r\n        case actionTypes.ADMIN_GET_ORDERS_FAILURE:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case actionTypes.ADMIN_EDIT_PRODUCT:\r\n            return {\r\n                ...state,\r\n                productToBeEdited: action.payload\r\n            }\r\n        case actionTypes.ADMIN_GET_PRODUCT_TO_BE_DELETED:\r\n            return {\r\n                ...state,\r\n                productToBeDeleted: action.payload\r\n\r\n            }\r\n        case actionTypes.ADMIN_GET_ALL_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: {\r\n                    loading: false,\r\n                    error: false,\r\n                    errorMessage: 'You have successfully fetched all the products.',\r\n                    products: action.payload\r\n                },\r\n            }\r\n\r\n        case actionTypes.ADMIN_GET_ALL_PRODUCTS_FAILURE:\r\n            return {\r\n                ...state\r\n            }\r\n        case actionTypes.ADMIN_GET_USERS:\r\n            return {\r\n                ...state,\r\n                users: {\r\n                    loading: false,\r\n                    error: false,\r\n                    errorMessage: 'You have successfully fetched all the users',\r\n                    users: action.payload\r\n                }\r\n            }\r\n\r\n        case actionTypes.ADMIN_DELETE_USER_FAILURE:\r\n            return {\r\n                ...state,\r\n                deleteUserMessage: action.payload\r\n            }\r\n        case actionTypes.ADMIN_USER_TO_BE_EDITED:\r\n            return {\r\n                ...state,\r\n                singleUserToBeEdited: action.payload\r\n            }\r\n\r\n        case actionTypes.ADMIN_GET_SINGLE_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                singleUser: action.payload\r\n            }\r\n\r\n        case actionTypes.ADMIN_GET_SINGLE_USER_PROFILE_FAILURE:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default adminReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    loading: true,\r\n    error: false,\r\n    errorMessage: '',\r\n    reviews: []\r\n};\r\n\r\nconst productReviews = (state = INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCT_REVIEWS:\r\n            return {\r\n                loading: false,\r\n                error: false,\r\n                reviews: action.payload\r\n            }\r\n        case actionTypes.RESET_CREATE_PRODUCT_REVIEW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.payload\r\n            }\r\n        case actionTypes.CREATE_PRODUCT_REVIEW_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                errorMessage: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default productReviews;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INITIAL_DATA = {\r\n    error: false,\r\n    loading: true,\r\n    errorMessage: '',\r\n    highestRatedProducts: []\r\n};\r\n\r\nconst highestRatedProductsReducer = (state=INITIAL_DATA, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_HIGHEST_RATED_PRODUCT:\r\n            return {\r\n                ...state,\r\n                error: false,\r\n                loading: false,\r\n                errorMessage: '',\r\n                highestRatedProducts: action.payload\r\n            }\r\n\r\n        case actionTypes.GET_HIGHEST_RATED_PRODUCT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false,\r\n                errorMessage: action.payload,\r\n                highestRatedProducts: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default highestRatedProductsReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport productsReducer from \"./productsReducer\";\r\nimport productDetailsReducer from \"./productDetailsReducer\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport registrationReducer from \"./registrationReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport orderReducer from \"./orderReducer\";\r\nimport orderDetailsReducer from \"./orderDetailsReducer\";\r\nimport orderPaymentReducer from \"./orderPaymentReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport productReviews from \"./productReviewReducer\";\r\nimport highestRatedProductReducer from \"./highestRatedProductReducer\";\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    order: orderReducer,\r\n    authentication: authReducer,\r\n    newUser: registrationReducer,\r\n    userProfile: userReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    paidOrder: orderPaymentReducer,\r\n    admin: adminReducer,\r\n    reviews: productReviews,\r\n    highestRatedProduct: highestRatedProductReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from \"./reducers/index\";\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst getPaymentMethodFromLocalStorage = () => {\r\n    let paymentMethod = '';\r\n    const getPaymentMethod = localStorage.getItem('paymentMethod');\r\n    if (getPaymentMethod) {\r\n        const payment = JSON.parse(getPaymentMethod);\r\n        return paymentMethod = payment;\r\n    } else {\r\n        return paymentMethod;\r\n    }\r\n}\r\n\r\nconst getShippingAddressFromLocalStorage = () => {\r\n    let shippingAddress = {};\r\n    const getShippingAddress = localStorage.getItem('shipping');\r\n    if (getShippingAddress) {\r\n        const shippingInfo = JSON.parse(getShippingAddress);\r\n        shippingAddress = {...shippingInfo };\r\n        return shippingAddress;\r\n    } else {\r\n        return shippingAddress;\r\n    }\r\n}\r\n\r\nconst getNewUserFromLocalStorage = () => {\r\n    let newUser = {};\r\n    const getNewUser = localStorage.getItem('newUser');\r\n\r\n    if (getNewUser) {\r\n        const user = JSON.parse(getNewUser);\r\n        newUser = {...user};\r\n        return newUser;\r\n    } else {\r\n        return newUser;\r\n    }\r\n};\r\n\r\nconst getCartFromLocalStorage = () => {\r\n    let data = [];\r\n    const getCartItems = localStorage.getItem('cartItems');\r\n    if (getCartItems) {\r\n        const items = JSON.parse(getCartItems);\r\n        data = [...items];\r\n        return data;\r\n    } else {\r\n        return data;\r\n    }\r\n};\r\n\r\nconst getLoggedInUserFromLocalStorage = () => {\r\n    let user = {};\r\n    const existingUser = localStorage.getItem('user');\r\n    if (existingUser) {\r\n        const user = { ...JSON.parse(existingUser) };\r\n        return user;\r\n    } else {\r\n        return user;\r\n    }\r\n};\r\n\r\nconst newUserInfo = {\r\n    login: false,\r\n    registrationMessage: '',\r\n    error: false,\r\n    newUser: getNewUserFromLocalStorage()\r\n}\r\n\r\nconst loggedInUserInfo = {\r\n    login: false,\r\n    loginMessage: '',\r\n    error: false,\r\n    user: getLoggedInUserFromLocalStorage()\r\n}\r\n\r\nconst cartInfo = {\r\n    loading: true,\r\n    error: 'false',\r\n    message: '',\r\n    cartItems: getCartFromLocalStorage(),\r\n    shippingAddress: getShippingAddressFromLocalStorage(),\r\n    paymentMethod: getPaymentMethodFromLocalStorage()\r\n};\r\n\r\nconst initialState = {\r\n    cart: cartInfo,\r\n    authentication: loggedInUserInfo,\r\n    newUser: newUserInfo\r\n};\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(thunk)),\r\n\r\n);\r\n\r\n\r\nconst ReduxConfiguration = (props) => {\r\n    return (\r\n        <Provider store={store}>\r\n            {props.children}\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default ReduxConfiguration;","import 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport ReduxConfiguration from \"./store/ReduxConfiguration\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ReduxConfiguration>\n          <App />\n      </ReduxConfiguration>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}